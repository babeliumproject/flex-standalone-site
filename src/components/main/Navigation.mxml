<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:skins="skins.*"
		 width="100%">

	<s:VGroup width="100%"
			  minWidth="1000"
			  height="100%"
			  gap="0">
		<skins:HorizontalSeparatorLine/>
		<s:BorderContainer id="sectionLinks"
						   borderVisible="false"
						   borderWeight="0"
						   minHeight="0"
						   width="100%"
						   height="100%"
						   backgroundImage="@Embed('/resources/images/rainbow_bgr.png')"
						   backgroundImageFillMode="scale">
			<s:layout>
				<s:HorizontalLayout paddingLeft="8"
									paddingRight="8"
									paddingTop="8"
									paddingBottom="8"
									horizontalAlign="left"
									verticalAlign="middle"
									clipAndEnableScrolling="true"/>
			</s:layout>
			<mx:Image source="resources/images/babelium_logo.png"
					  buttonMode="true"
					  click="changeView('home',event)"/>
			
			<skins:NavigationToggleButton label="{resourceManager.getString('myResources', 'BROWSE')}"
										  styleName="practiceLinkButton"
										  skinClass="skins.NavigationToggleButtonSkin"
										  enabled="{!DataModel.getInstance().recordingExercise &amp;&amp;
						   							!DataModel.getInstance().recording &amp;&amp;
						   							!DataModel.getInstance().playing}"
										  selected="{DataModel.getInstance().currentContentViewStackIndex == 1}"
										  click="changeView('exercises',event)"/>
			<mx:VRule height="40"/>
			<skins:NavigationToggleButton label="{resourceManager.getString('myResources', 'LEARN')}"
										  styleName="evaluateLinkButton"
										  skinClass="skins.NavigationToggleButtonSkin"
										  includeInLayout="{DataModel.getInstance().isLoggedIn}"
										  visible="{DataModel.getInstance().isLoggedIn}"
										  selected="{_urlManager.moduleIndex == 12 &amp;&amp;
										  			 _urlManager.actionFragment == BabeliaBrowserManager.LEARN }"
										  click="redirect('course','learn')"/>
			<skins:NavigationToggleButton label="{resourceManager.getString('myResources', 'CREATE')}"
										  id="createLinkButton"
										  styleName="configureLinkButton"
										  skinClass="skins.NavigationToggleButtonSkin"
										  enabled="{DataModel.getInstance().isLoggedIn}"
										  selected="{DataModel.getInstance().currentContentViewStackIndex == 5}"
										  click="changeView('upload',event)"/>
		</s:BorderContainer>
		<skins:HorizontalSeparatorLine alpha="0.50"/>
		<s:BorderContainer id="searchUploadBar"
						   borderVisible="false"
						   borderWeight="0"
						   minHeight="0"
						   width="100%"
						   minWidth="1000"
						   dropShadowVisible="true"
						   includeInLayout="{DataModel.getInstance().isLoggedIn}"
						   visible="{DataModel.getInstance().isLoggedIn}">
			<s:backgroundFill>
				<mx:LinearGradient>
					<mx:entries>
						<mx:GradientEntry color="#ffffff"
										  ratio="0"
										  alpha="0.5"/>
						<mx:GradientEntry color="#268caa"
										  ratio="1"
										  alpha="0.5"/>
					</mx:entries>
				</mx:LinearGradient>
			</s:backgroundFill>
			<s:layout>
				<s:HorizontalLayout paddingLeft="200"
									verticalAlign="middle"
									paddingTop="4"
									paddingBottom="4"
									paddingRight="4"/>
			</s:layout>
			
			<s:TextInput id="searchField"
						 styleName="searchTextInput"
						 width="100%"
						 maxChars="100"
						 enter="launchSearch(null)"/>
			<s:Button label="{resourceManager.getString('myResources','LABEL_SEARCH')}"
					  styleName="searchButton"
					  buttonMode="true"
					  enabled="true"
					  click="launchSearch(event)"/>
		</s:BorderContainer>
		<skins:HorizontalSeparatorLine/>
	</s:VGroup>


	<fx:Binding source="{DataModel.getInstance().tagCloudClicked}"
				destination="this.onTagCloudClicked"/>
	<fx:Script>
		<![CDATA[
			import control.BabeliaBrowserManager;
			
			import events.SearchEvent;
			import events.VideoStopEvent;
			//import events.ViewChangeEvent;
			
			import model.DataModel;
			
			import mx.utils.URLUtil;
			
			import skins.NavigationToggleButtonSkin;
			
			[Bindable] protected var _model:DataModel=DataModel.getInstance();
			[Bindable] protected var _urlManager:BabeliaBrowserManager=BabeliaBrowserManager.getInstance();

			//Initialization method
			private function init():void
			{
			}
			
			private function redirect(module:String=null, action:String=null, value:String=null):void{
				_urlManager.updateURL(module,action,value);
				//_urlManager.parseURL();
			}

			private function changeView(destination:String, event:MouseEvent):void
			{
//				if(event != null)
//					unselectNavButtons(event);
				//new ViewChangeEvent(destination).dispatch();
				_urlManager.updateURL(destination);
			}

			private function unselectNavButtons(event:MouseEvent):void
			{
				var pressedButton:NavigationToggleButton=event.target as NavigationToggleButton;
				for (var i:uint=0; i < sectionLinks.numElements; i++)
				{
					if (sectionLinks.getElementAt(i) is NavigationToggleButton)
					{
						var navButton:NavigationToggleButton=sectionLinks.getElementAt(i) as NavigationToggleButton;
						if (navButton != pressedButton)
							navButton.selected=false;
					}
				}
			}

			private function launchSearch(event:MouseEvent):void
			{
				DataModel.getInstance().searchField=searchField.text;
				//if (DataModel.getInstance().currentContentViewStackIndex != ViewChangeEvent.VIEWSTACK_SEARCH_MODULE_INDEX)
				//{
				//changeView(ViewChangeEvent.VIEW_SEARCH_MODULE, event);
				_urlManager.updateURL('search');
				//}
				new SearchEvent(SearchEvent.LAUNCH_SEARCH).dispatch();
			}

			public function set onTagCloudClicked(value:Boolean):void
			{
				if (DataModel.getInstance().tagCloudClicked)
				{
					searchField.text=DataModel.getInstance().searchField;
					DataModel.getInstance().tagCloudClicked=false;
				}
			}
		]]>
	</fx:Script>

</s:Group>
