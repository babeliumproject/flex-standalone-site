<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:search="components.search.*"
		  width="100%"
		  xmlns:skins="skins.*">

	<fx:Declarations>
		<s:ArrayCollection id="sortFields1">
			<fx:Object label="{resourceManager.getString('myResources','SEARCH_CB_AUTOMATIC')}"
					   data="score"/>
			<fx:Object label="{resourceManager.getString('myResources','SEARCH_CB_USER')}"
					   data="userName"/>
			<fx:Object label="{resourceManager.getString('myResources','SEARCH_CB_LANGUAGE')}"
					   data="language"/>
			<fx:Object label="{resourceManager.getString('myResources','SEARCH_CB_RATING')}"
					   data="avgRating"/>
			<fx:Object label="{resourceManager.getString('myResources','SEARCH_CB_DIFFICULTY')}"
					   data="avgDifficulty"/>
			<fx:Object label="{resourceManager.getString('myResources','SEARCH_CB_DATE')}"
					   data="addingDate"/>
		</s:ArrayCollection>
	</fx:Declarations>


	<fx:Script>
		<![CDATA[
			import control.BabeliaBrowserManager;
			
			//import events.ViewChangeEvent;
			
			import model.DataModel;
			
			import components.main.VideoPaginator;
			
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.controls.Alert;
			
			import spark.components.Button;
			
			import vo.ExerciseVO;

			[Bindable]
			[Embed(source="../../resources/images/first.png")]
			public var firstI:Class;
			[Bindable]
			[Embed(source="../../resources/images/previous.png")]
			public var previousI:Class;
			[Bindable]
			[Embed(source="../../resources/images/next.png")]
			public var nextI:Class;
			[Bindable]
			[Embed(source="../../resources/images/last.png")]
			public var lastI:Class;

			[Bindable]
			private var dataProvider:ArrayCollection=new ArrayCollection();
			[Bindable]
			private var dataTemp:ArrayCollection=new ArrayCollection();
			[Bindable]
			private var currentCBIndex:int=0;
			[Bindable]
			private var descendingCB:Boolean=true;
			[Bindable]
			private var sortFields:ArrayCollection=new ArrayCollection([{label: "Automatic", data: "score"}, {label: "User", data: "userName"}, {label: "Language", data: "language"}, {label: "Rating", data: "avgRating"}, {label: "Difficulty", data: "avgDifficulty"}, {label: "Date", data: "addingDate"}]);


			public function set onSearchRetrieved(value:Boolean):void
			{
				dataProvider=DataModel.getInstance().videoSearches;
				DataModel.getInstance().currentPage=1;
				sort.selectedIndex=0;
				if (dataProvider.length > 0)
				{
					labelSort.enabled=true;
					sort.enabled=true;
				}
				else
				{
					labelSort.enabled=false;
					sort.enabled=false;
				}
				createPagination();
				descendingCB=true;
				currentCBIndex=0;
			}

			public function createPagination():void
			{
				VideoPaginator.createPaginationMenu(dataProvider.length, DataModel.getInstance().pageSize, DataModel.getInstance().currentPage, DataModel.getInstance().numberOfPagesNav, paginationBox, navigateToPage);
				refreshDataProvider();
			}

			private function navigateToPage(event:MouseEvent):void
			{
				//Go to the page
				DataModel.getInstance().currentPage=int((event.target as Button).id);
				//Refresh the pagination controls
				createPagination();
			}

			public function refreshDataProvider():void
			{
				var current:int=DataModel.getInstance().currentPage - 1;
				var pageSize:int=DataModel.getInstance().pageSize;
				dataTemp=new ArrayCollection(dataProvider.source.slice((current * pageSize), (current * pageSize) + pageSize));
				//searchListTable.rowCount=dataTemp.length;
				searchListDataGroup.dataProvider=dataTemp;
			}


			public function closeHandler(event:Event):void
			{
				var dataSortField:SortField=new SortField();
				var dataSortField1:SortField=new SortField();
				var dataSort:Sort=new Sort();
				var name:String=event.target.selectedItem.data;
				var eSI:int=event.target.selectedIndex;
				//Create the SortField object for the data
				dataSortField.numeric=false;
				dataSortField.name=name;
				if (currentCBIndex == eSI)
				{
					descendingCB=!descendingCB;
				}
				else
				{
					descendingCB=true;
				}
				dataSortField.descending=descendingCB;
				//Create the second SortField object for the data
				dataSortField1.numeric=false;
				dataSortField1.name="title";
				dataSortField1.descending=true;
				//Create the Sort object and add the SortField object to the array of fields to sort
				dataSort.fields=[dataSortField, dataSortField1];
				//Set the ArrayCollection objects sort property to our custom sort, and refresh
				dataProvider.sort=dataSort;
				dataProvider.refresh();
				dataProvider.source=dataProvider.toArray();
				currentCBIndex=eSI;
				DataModel.getInstance().currentPage=1;
				createPagination();
			}

			public function set onLanguage(value:Boolean):void
			{
				if (DataModel.getInstance().languageChanged)
				{
					var oldIndex:int=sort.selectedIndex;
					sort.dataProvider=sortFields1;
					sort.selectedIndex=oldIndex;
					DataModel.getInstance().languageChanged=false;
				}
			}

			public function changeHandler(event:Event):void
			{
				var obj:ExerciseVO=List(event.target).selectedItem as ExerciseVO;
				if (obj.isSubtitled)
				{
					//BabeliaBrowserManager.getInstance().updateURL(BabeliaBrowserManager.index2fragment(ViewChangeEvent.VIEWSTACK_EXERCISE_MODULE_INDEX), BabeliaBrowserManager.VIEW, obj.name);
					BabeliaBrowserManager.getInstance().updateURL('exercises', BabeliaBrowserManager.VIEW, obj.name);
				}
				else
				{
					//BabeliaBrowserManager.getInstance().updateURL(BabeliaBrowserManager.index2fragment(ViewChangeEvent.VIEWSTACK_SUBTITLE_MODULE_INDEX), BabeliaBrowserManager.SUBTITLE, obj.name);
					BabeliaBrowserManager.getInstance().updateURL('subtitles', BabeliaBrowserManager.SUBTITLE, obj.name);
				}
				List(event.target).selectedItem=null;
				BabeliaBrowserManager.getInstance().parseURL(null);
			}
		]]>
	</fx:Script>

	<fx:Binding source="{DataModel.getInstance().videoSearchesRetrieved}"
				destination="this.onSearchRetrieved"/>
	<fx:Binding source="{DataModel.getInstance().languageChanged}"
				destination="this.onLanguage"/>


	<s:BorderContainer styleName="sectionInfoBox"
					   width="100%"
					   minHeight="0">
		<s:layout>
			<s:VerticalLayout paddingTop="16"/>
		</s:layout>
		<s:Label text="{resourceManager.getString('myResources','LABEL_SEARCH') ? resourceManager.getString('myResources','LABEL_SEARCH') : 'Search' }"
				 paddingLeft="16"
				 paddingRight="16"
				 styleName="sectionInfoTitleLabel"/>
		<s:Label text="{resourceManager.getString('myResources','SEARCH_SECTION_DESCRIPTION') ? resourceManager.getString('myResources','SEARCH_SECTION_DESCRIPTION') : 'Search section description' }"
				 paddingBottom="16"
				 paddingLeft="16"
				 paddingRight="16"/>
		<skins:HorizontalSeparatorLine width="100%"/>
	</s:BorderContainer>


	<s:VGroup id="searchResultInfo"
			  width="100%"
			  horizontalAlign="left"
			  paddingLeft="16"
			  paddingRight="16"
			  paddingTop="16">
		<s:VGroup width="100%">
			<s:Label id="resultsOf"
					 styleName="sectionTitleLabel"
					 text="{resourceManager.getString('myResources','SEARCH_RESULTS_FOR') ? resourceManager.getString('myResources','SEARCH_RESULTS_FOR') +' '+DataModel.getInstance().searchField : 'Search results for '+DataModel.getInstance().searchField}"
					 width="900"
					 maxDisplayedLines="1"/>
			<s:Line width="{resultsOf.width}">
				<s:stroke>
					<mx:SolidColorStroke weight="3"
										 color="{resultsOf.getStyle('color')}"/>
				</s:stroke>
			</s:Line>
		</s:VGroup>

		<s:HGroup width="100%"
				  paddingTop="16"
				  verticalAlign="middle">
			<s:Label id="numResul"
					 text="{resourceManager.getString('myResources','SEARCH_RESULTSFOUND')+': '+ dataProvider.length}"/>
			<s:HGroup width="100%"
					  horizontalAlign="right"
					  verticalAlign="middle">
				<s:Label id="labelSort"
						 text="{resourceManager.getString('myResources','SEARCH_ORDERBY')}"
						 enabled="false"/>
				<mx:ComboBox id="sort"
							 close="closeHandler(event)"
							 editable="false"
							 enabled="false"
							 dataProvider="{sortFields1}">
				</mx:ComboBox>
			</s:HGroup>
		</s:HGroup>
		<s:Line width="100%"
				alpha="0.5">
			<s:stroke>
				<mx:SolidColorStroke weight="2"
									 color="#aaaaaa"/>
			</s:stroke>
		</s:Line>
	</s:VGroup>
	<s:VGroup width="100%"
			  horizontalAlign="left"
			  paddingLeft="16"
			  paddingRight="16"
			  paddingTop="16">

		<s:List id="searchListDataGroup"
				width="100%"
				minHeight="0"
				change="changeHandler(event)"
				borderVisible="false"
				skinClass="skins.TransparentBgListSkin"
				itemRenderer="modules.exercise.view.ExerciseItemRenderer"
				dataProvider="{dataProvider}">
			<s:layout>
				<s:TileLayout horizontalAlign="justify"
							  verticalAlign="middle"
							  columnAlign="justifyUsingWidth"
							  columnWidth="500"/>
			</s:layout>
		</s:List>

		<!--
		<mx:DataGrid id="searchListTable"
					 width="100%"
					 editable="false"
					 selectable="false"
					 borderStyle="none"
					 sortableColumns="false"
					 draggableColumns="false"
					 headerHeight="0"
					 contentBackgroundAlpha="0">
			<mx:columns>
				<mx:DataGridColumn itemRenderer="modules.main.ExerciseListItem"/>
			</mx:columns>
		</mx:DataGrid>
			 <s:VGroup>
			 <tc:TagCloud id="tagCloud"
			 title="{resourceManager.getString('myResources','SEARCH_TAGCLOUD')}"
			 width="300"
			 height="300">
			 </tc:TagCloud>
			 <mx:SWFLoader id="myLoader" width="300" height="300"
			 source="../libs/tagcloud.swf"/>
			 </s:VGroup>
		-->

		<s:HGroup id="paginationBox"
				  horizontalAlign="center"
				  verticalAlign="middle"
				  width="100%"
				  height="100%"/>
	</s:VGroup>
</s:VGroup>
