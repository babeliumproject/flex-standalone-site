<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:userManagement="components.userManagement.*"
		  xmlns:main="components.main.*"
		  width="100%"
		  preinitialize="preinitializeHandler(event)"
		  creationComplete="creationCompleteHandler(event)">

	<fx:Script>
		<![CDATA[
			import control.URLManager;
			
			import model.DataModel;
			
			import mx.events.FlexEvent;
			
			private var _creationComplete:Boolean;
			private var _model:DataModel;

			/*
			private function set onUserAuthenticationStatus(value:Boolean):void
			{
				if (DataModel.getInstance().isLoggedIn == true)
					new ViewChangeEvent(ViewChangeEvent.VIEW_ACCOUNT_SIGNED).dispatch();
				else
					new ViewChangeEvent(ViewChangeEvent.VIEW_ACCOUNT_UNSIGNED).dispatch();
			}*/
			
			
			protected function preinitializeHandler(event:FlexEvent):void
			{
				this.addEventListener(FlexEvent.ADD, componentAddedHandler);
				this.addEventListener(FlexEvent.REMOVE, componentRemovedHandler);
				this.addEventListener(FlexEvent.UPDATE_COMPLETE, componentUpdateCompleteHandler);
			}
			
			protected function componentAddedHandler(event:FlexEvent):void{
				this.visible=false;
			}
			
			protected function componentRemovedHandler(event:FlexEvent):void{
			}
			
			protected function componentUpdateCompleteHandler(event:FlexEvent):void{
				checkPermissions();
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				_creationComplete=true;
				_model=DataModel.getInstance();
			}
			
			protected function checkPermissions():void{
				if (!DataModel.getInstance().isLoggedIn)
				{
					URLManager.getInstance().redirect('login');
					//BabeliaBrowserManager.getInstance().parseURL();
					return;
				}
				this.visible=true;
			}
			
			
		]]>
	</fx:Script>

	<!--
	<mx:ViewStack id="accountViewstack"
				  width="100%"
				  height="100%"
				  selectedIndex="{ DataModel.getInstance().currentAccountViewStackIndex }"
				  resizeToContent="true"
				  creationPolicy="all">

		
		<s:NavigatorContent id="accountUnauthorizedUserNavContent">
			<main:UnauthorizedNotice id="accountUnauthorizedUser"/>
		</s:NavigatorContent>
		
		<s:NavigatorContent id="accountMainNavContent">
	-->
			<userManagement:AccountMain id="accountMain"/>
	<!--
		</s:NavigatorContent>

	</mx:ViewStack>

	<fx:Binding source="{DataModel.getInstance().isLoggedIn}"
				destination="onUserAuthenticationStatus"/>
-->


</s:VGroup>
