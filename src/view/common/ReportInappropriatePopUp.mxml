<?xml version="1.0" encoding="utf-8"?>
<skins:CustomTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
						 xmlns:s="library://ns.adobe.com/flex/spark"
						 xmlns:mx="library://ns.adobe.com/flex/mx"
						 xmlns:skins="skins.*"
						 xmlns:common="view.common.*"
						 xmlns:components="components.*"
						 styleName="reportPopup"
						 title="{resourceManager.getString('myResources','REPORT_INAPPROPRIATE')}"
						 creationComplete="creationCompleteHandler()"
						 autoLayout="true">

	<skins:layout>
		<s:VerticalLayout paddingLeft="16"
						  paddingRight="16"
						  paddingTop="16"
						  paddingBottom="16"/>
	</skins:layout>

	<fx:Script>
		<![CDATA[
			import model.DataModel;
			
			import modules.exercise.event.ExerciseEvent;
			
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.resources.ResourceManager;
			
			import vo.ExerciseReportVO;
			import vo.ExerciseVO;

			private var _exercise:ExerciseVO;

			[Bindable]
			private var _isPrompt:Boolean;

			[Bindable]
			private var reportReasons:ArrayCollection=new ArrayCollection([{'code': 0, 'label': 'REPORT_OBSCENE'}, {'code': 1, 'label': 'REPORT_COPYRIGHTED'}, {'code': 2, 'label': 'REPORT_18_PLUS'}, {'code': 3, 'label': 'REPORT_OFFENSIVE'}, {'code': 4, 'label': 'REPORT_VIOLENCE'}, {'code': 5, 'label': 'REPORT_TECHNICAL'}, {'code': 6, 'label': 'REPORT_DUPLICATED'}, {'code': 7, 'label': 'REPORT_TERMS'}]);

			//The keyCode for ENTER key
			public static const ENTER_KEY:int=13;

			public function creationCompleteHandler():void
			{
				this.addEventListener(KeyboardEvent.KEY_DOWN, checkPressedKey);
				this.addEventListener(CloseEvent.CLOSE, cancelButtonClickHandler);
				//_isPrompt =  reportComboBox.reportInappropriateComboBox.selectedIndex > -1;
			}

			private function checkPressedKey(e:KeyboardEvent):void
			{
				if (e.keyCode == ENTER_KEY)
				{
					reportButtonClickHandler(null);
				}
			}

			public function set exerciseData(exercise:ExerciseVO):void
			{
				if (exercise)
					_exercise=exercise;
			}

			public function get exerciseData():ExerciseVO
			{
				return _exercise;
			}

			public function reportButtonClickHandler(event:Event):void
			{
				if (_exercise && reportInappropriateComboBox.selectedIndex > -1)
				{
					var item:Object=reportInappropriateComboBox.selectedItem;
					var report:ExerciseReportVO=new ExerciseReportVO();
					report.exerciseId=_exercise.id;
					report.reason=String(item.code).toLowerCase();
					PopUpManager.removePopUp(this);
					new ExerciseEvent(ExerciseEvent.REPORT_EXERCISE, report).dispatch();
				}
			}

			public function cancelButtonClickHandler(event:Event):void
			{
				PopUpManager.removePopUp(this);
			}
		]]>
	</fx:Script>



	<s:Label text="{resourceManager.getString('myResources','REPORT_SPECIFY_ISSUE')}"/>

	<components:EnhancedDropDownList id="reportInappropriateComboBox"
									 localeAwareDataProvider="{reportReasons}"
									 localeAwarePrompt="CHOOSE_ISSUE"
									 skinClass="skins.BootstrapDropDownList"
									 cornerRadius="3"
									 borderColor="0xcccccc"
									 sortItems="true"
									 width="100%"/>

	<s:HGroup width="100%"
			  horizontalAlign="center"
			  verticalAlign="middle"
			  paddingTop="20">
		<s:Button label="{ResourceManager.getInstance().getString('myResources','REPORT')}"
				  id="reportButton"
				  styleName="btn-success"
				  click="reportButtonClickHandler(event)"
				  buttonMode="true"/>
		<s:Button label="{ResourceManager.getInstance().getString('myResources','CANCEL')}"
				  id="cancelButton"
				  styleName="btn-default"
				  click="cancelButtonClickHandler(event)"
				  buttonMode="true"/>
	</s:HGroup>

</skins:CustomTitleWindow>
