package commands.subtitles{	import com.adobe.cairngorm.commands.ICommand;	import com.adobe.cairngorm.control.CairngormEvent;		import flash.events.*;	import flash.media.*;	import flash.net.*;		import model.DataModel;		import mx.rpc.IResponder;	/**	 * Setup a new NetConnection with the RTMP server.	 * <p>The NetConnection is stored in the Model.</p>	 *	 */	public class SetupConnectionCommand implements ICommand, IResponder	{		/**		 *		 */		private var model:DataModel=DataModel.getInstance();		/**		 *		 * @param cgEvent		 */		public function execute(cgEvent:CairngormEvent):void		{			var event:SetupConnectionEvent=SetupConnectionEvent(cgEvent);			// Setup the permanent Delegate to manage the NetConnection.			model.ncDelegate=new NetConnectionDelegate(this);		}		/**		 *		 * The result method is called when the delegate receives		 * a result from the service		 *		 * @param event		 */		public function result(event:Object):void		{			var info:Object=event.info;			var statusCode:String=info.code;			model.netConnected=false;			switch (statusCode)			{				case "NetConnection.Connect.Success":					model.netConnected=true;					break;				case "NetConnection.Connect.Failed":					//					serverDisconnect();					break;				case "NetConnection.Connect.Closed":					serverDisconnect();					break;				case "NetConnection.Connect.InvalidApp":					break;				case "NetConnection.Connect.AppShutDown":					break;				case "NetConnection.Connect.Rejected":					break;				default:					// statements					break;			}		}		/**		 * The fault method is called when the delegate receives a fault from the service		 *		 * @param event		 */		public function fault(event:Object):void		{			//			trace(event.text);		}				/**		 * The Red5 oflaDemo returns bandwidth stats.		 */				public function onBWDone() : void {					}		private function serverDisconnect():void		{			//Do something		}	}}