<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 paddingTop="4"
		 paddingBottom="4"
		 paddingLeft="8"
		 paddingRight="8"
		 verticalAlign="middle"
		 xmlns:ns1="com.asfusion.controls.*"
		 fontFamily="Arial"
		 height="113"
		 creationComplete="completeHandler()">

	<mx:Canvas width="120"
			   height="90">
		<mx:Image id="thumbnail"
				  scaleContent="true"
				  source="{getImageSource(data as ExerciseVO)}"
				  autoLoad="true"
				  click="imageClickHandler(event)"
				  width="120"
				  height="90"
				  toolTip="{data.title}"
				  useHandCursor="true"
				  buttonMode="true"/>
		<mx:TextInput text="{_timeFormatter.format(data.duration)}"
					  x="88"
					  y="0"
					  width="32"
					  disabledColor="0xffffff"
					  backgroundDisabledColor="0x000000"
					  backgroundAlpha="0.75"
					  editable="false"
					  borderStyle="none"
					  enabled="false"
					  height="16"
					  fontFamily="Arial"
					  fontSize="10"/>
	</mx:Canvas>

	<mx:VBox width="100%"
			 verticalGap="2">
		<mx:HBox horizontalAlign="left"
				 verticalAlign="middle"
				 horizontalGap="2"
				 width="100%">
			<mx:Image width="16"
					  height="16"
					  toolTip="{exerciseLanguage.source}"
					  source="{getFlagSource(data as ExerciseVO)}"
					  id="exerciseLanguage"/>
			<mx:LinkButton label="{data.title}"
						   fontSize="12"
						   width="100%"
						   textAlign="left"
						   click="titleClickHandler(event)"/>
		</mx:HBox>

		<mx:HRule height="1"
				  width="100%"/>
		<mx:Text text="{data.description}"
				 width="100%"
				 fontSize="12"/>
		<mx:HBox verticalAlign="middle">
			<ns1:Rating value="{data.avgRating}"
						liveRollOver="false"/>
			<mx:Label text="{dateFormatter.format(data.addingDate)}"
					  fontWeight="bold"
					  fontFamily="Arial"
					  fontSize="10"/>
			<mx:LinkButton label="{data.userName}"/>
		</mx:HBox>
		<mx:HBox verticalAlign="middle">
			<mx:Image id="license"
					  scaleContent="true"
					  source="{getLicenseSource(data as ExerciseVO)}"
					  autoLoad="true"
					  click="licenseClickHandler(event)"
					  toolTip="{_licenseData.tooltip}"
					  width="80"
					  height="15"
					  useHandCursor="true"
					  buttonMode="true"/>
			<mx:Label text="{resourceManager.getString('myResources','AUTHOR_PROVIDED_BY')}"
					  visible="{data.reference}"/>
			<mx:LinkButton id="referenceUrl"
						   fontFamily="Arial"
						   fontSize="10"
						   label="{data.reference}"
						   textDecoration="underline"
						   click="referenceClickHandler(event)"/>
		</mx:HBox>

	</mx:VBox>

	<mx:DateFormatter id="dateFormatter"
					  formatString="{resourceManager.getString('myResources','DATE_FORMAT')}"/>


	<mx:Script>
		<![CDATA[
			import events.ExerciseEvent;
			import events.ExerciseRoleEvent;
			import events.SubtitleEvent;

			import model.DataModel;

			import mx.controls.Text;

			import view.common.LicenseResource;
			import view.common.LocaleFlagResource;
			import view.common.TimeFormatter;

			import vo.ExerciseRoleVO;
			import vo.ExerciseVO;
			import vo.LicenseVO;
			import vo.SubtitleAndSubtitleLinesVO;

			private var _data:Object;

			[Bindable]
			private var _licenseData:LicenseVO=new LicenseVO();

			[Bindable]
			private var _timeFormatter:TimeFormatter=new TimeFormatter();

			public function completeHandler():void
			{
				_data=data;
			}

			private function imageClickHandler(event:MouseEvent):void
			{
				viewExercise();
			}

			private function titleClickHandler(event:MouseEvent):void
			{
				viewExercise();
			}

			private function licenseClickHandler(event:MouseEvent):void
			{
				navigateToURL(new URLRequest(_licenseData.licenseUrl));
			}

			private function referenceClickHandler(event:MouseEvent):void
			{
				navigateToURL(new URLRequest(parseExternalUrl(data.reference)), '_blank');
			}

			public function getFlagSource(temp:ExerciseVO):String
			{
				return LocaleFlagResource.getFlagResource(temp.language);
			}

			public function getImageSource(temp:ExerciseVO):String
			{
				var url:String='';
				if (temp.source == "Red5")
					url=DataModel.getInstance().thumbURL + "/" + temp.thumbnailUri;
				else
					url=temp.thumbnailUri;
				return url;
			}

			public function getLicenseSource(temp:ExerciseVO):String
			{
				_licenseData=LicenseResource.getLicenseData(temp.license);
				return _licenseData.imageResource;
			}

			private function viewExercise():void
			{
				var temp:Object=data;
				var tempEx:ExerciseVO=temp as ExerciseVO;
				var subtitles:SubtitleAndSubtitleLinesVO=new SubtitleAndSubtitleLinesVO(0, tempEx.id, 0, '', tempEx.language);
				var roles:ExerciseRoleVO=new ExerciseRoleVO();
				roles.exerciseId=tempEx.id;

				//If it doesn't work this way, we can chain the events
				new ExerciseRoleEvent(ExerciseRoleEvent.GET_EXERCISE_ROLES, roles).dispatch();
				new SubtitleEvent(SubtitleEvent.GET_EXERCISE_SUBTITLE_LINES, subtitles).dispatch();
				new ExerciseEvent(ExerciseEvent.WATCH_EXERCISE, tempEx).dispatch();
			}

			//http://livedocs.adobe.com/flex/3/langref/flash/net/package.html#navigateToURL%28%29
			private function parseExternalUrl(url:String):String
			{
				var urlparse:String=url;
				var httpPattern:RegExp=new RegExp("^http[s]?\:\\/\\/");
				if (httpPattern.exec(urlparse) == null)
				{
					urlparse="http://" + urlparse;
				}
				return urlparse;
			}

			private function trimTitle():void
			{

			}

			private function trimDescription():void
			{

			}
		]]>
	</mx:Script>

</mx:HBox>
