<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="onComplete()"
		 
		 horizontalAlign="center"
		 verticalAlign="middle"
		 resize="calculateNeededColumns(event)">

	<fx:Script>
		<![CDATA[
			import events.ExerciseEvent;
			
			import model.DataModel;
			
			import modules.search.VideoPaginator;
			import modules.userManagement.TopCollaborators;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Button;
			import mx.core.Application;
			import mx.events.ResizeEvent;
			
			import vo.ExerciseVO;

			private var _refreshTimer:Timer;

			[Bindable]
			private var _currentPage:int=1;

			[Bindable]
			private var _dataProvider:ArrayCollection;

			public function onComplete():void
			{
				retrieveExercises();
				_refreshTimer=new Timer(600000, 0); // Refresh the exercise list every 10 minutes
				_refreshTimer.addEventListener(TimerEvent.TIMER, onTimerTick);
				_refreshTimer.start();
			}

			private function retrieveExercises():void
			{
				new ExerciseEvent(ExerciseEvent.GET_EXERCISES).dispatch();
			}

			private function onTimerTick(tick:TimerEvent):void
			{
				retrieveExercises();
			}

			public function set onExercisesRetrieved(value:Boolean):void
			{
				if (DataModel.getInstance().availableExercisesRetrieved.getItemAt(0))
				{
					_dataProvider=DataModel.getInstance().availableExercises;

					createPagination();

					DataModel.getInstance().availableExercisesRetrieved.setItemAt(false, 0);
						//resizeDataGrid();
				}
			}

			public function createPagination():void
			{
				VideoPaginator.createPaginationMenu(_dataProvider.length, DataModel.getInstance().pageSize, _currentPage, DataModel.getInstance().numberOfPagesNav, paginationBox, navigateToPage);
				refreshDataProvider();
			}

			private function navigateToPage(event:MouseEvent):void
			{
				//Go to the page
				_currentPage=int((event.target as Button).id);
				//Refresh the pagination controls
				createPagination();
			}

			private function refreshDataProvider():void
			{
				var current:int=_currentPage - 1;
				var pageSize:int=DataModel.getInstance().pageSize;
				var dataTemp:ArrayCollection=new ArrayCollection(_dataProvider.source.slice((current * pageSize), (current * pageSize) + pageSize));
				exerciseTileList.dataProvider=dataTemp;
			}

			public function calculateNeededColumns(event:ResizeEvent):void
			{
				exerciseTileList.columnCount = Application.application.parent.width / exerciseTileList.columnWidth;
				exerciseTileList.validateNow();
			}
		]]>
	</fx:Script>
	<fx:Binding source="{DataModel.getInstance().availableExercisesRetrieved}"
				destination="onExercisesRetrieved"/>

	<mx:TileList id="exerciseTileList"
				 
				 horizontalScrollPolicy="off"
				 dataProvider="{_dataProvider}"
				 itemRenderer="modules.main.ExerciseListItem"
				 borderStyle="none"
				 backgroundAlpha="0.0"
				 columnWidth="500"
				 columnCount="2"
				 selectable="false"
				 verticalAlign="middle"/>

	<s:HGroup id="paginationBox"
			 width="100%"
			 horizontalAlign="center"
			 gap="2"/>
</s:VGroup>
