<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns:ns1="com.asfusion.controls.*"
		 creationComplete="onComplete()"
		 verticalScrollPolicy="off">

	<mx:Script>
		<![CDATA[
			import events.ExerciseEvent;
			
			import model.DataModel;
			
			import modules.search.VideoPaginator;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Button;
			
			private var _refreshTimer:Timer;
			
			[Bindable] private var _currentPage:int = 1;
			
			[Bindable] private var _dataProvider:ArrayCollection;

			public function onComplete():void
			{
				retrieveExercises();
				_refreshTimer = new Timer(300000,0);
				_refreshTimer.addEventListener(TimerEvent.TIMER, onTimerTick);
			}
			
			private function retrieveExercises():void{
				new ExerciseEvent(ExerciseEvent.GET_EXERCISES).dispatch();
			}
			
			private function onTimerTick(tick:TimerEvent):void{
				retrieveExercises();
			}

			public function set onExercisesRetrieved(value:Boolean):void
			{
				if (DataModel.getInstance().availableExercisesRetrieved.getItemAt(0))
				{
					_dataProvider=DataModel.getInstance().availableExercises;
					
					createPagination();
					
					DataModel.getInstance().availableExercisesRetrieved.setItemAt(false, 0);
					//resizeDataGrid();
				}
			}
			
			public function createPagination():void{
				VideoPaginator.createPaginationMenu(_dataProvider.length, DataModel.getInstance().pageSize, _currentPage, DataModel.getInstance().numberOfPagesNav,  paginationBox, navigateToPage);
				refreshDataProvider();
			}
			
			private function navigateToPage(event:MouseEvent):void
			{
				//Go to the page
				_currentPage = int((event.target as Button).id);
				//Refresh the pagination controls
				createPagination();
			}
			
			public function refreshDataProvider():void
			{
				var current:int=_currentPage - 1;
				var pageSize:int=DataModel.getInstance().pageSize;
				var dataTemp:ArrayCollection=new ArrayCollection(_dataProvider.source.slice((current * pageSize), (current * pageSize) + pageSize));
				exerciseListTable.rowCount=dataTemp.length;
				exerciseListTable.dataProvider=dataTemp;
			}
			
			private function resizeDataGrid():void{
				exerciseListTable.rowCount = _dataProvider.length;
				exerciseListTable.rowHeight = 117;
				exerciseListTable.height = exerciseListTable.measureHeightOfItems(0, _dataProvider.length) + exerciseListTable.headerHeight;
				
			}
			
		]]>
	</mx:Script>
	<mx:Binding source="{DataModel.getInstance().availableExercisesRetrieved.getItemAt(0)}"
				destination="this.onExercisesRetrieved"/>

	<mx:DataGrid id="exerciseListTable"
				 width="100%"
				 editable="false"
				 selectable="false"
				 verticalScrollPolicy="off"
				 sortableColumns="false"
				 draggableColumns="false"
				 headerHeight="0"
				 backgroundAlpha="0"
				 borderThickness="0"
				 dataProvider="{DataModel.getInstance().availableExercises}">
		<mx:columns>
			<mx:DataGridColumn itemRenderer="modules.main.ExerciseListItem"/>
		</mx:columns>
	</mx:DataGrid>
	
	<mx:HBox id="paginationBox"
			 width="100%"
			 horizontalAlign="left"
			 horizontalGap="2"/>
</mx:VBox>
