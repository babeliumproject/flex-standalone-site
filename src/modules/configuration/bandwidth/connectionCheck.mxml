<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:ns1="modules.configuration.bandwidth.*"
		  xmlns:common="view.common.*"
		  styleName="padding10AllSidesBox"
		  width="100%"
		  height="100%"
		  creationComplete="onComplete()">

	<fx:Script>
		<![CDATA[
			import flash.events.NetStatusEvent;
			import flash.net.NetConnection;

			import model.DataModel;

			import modules.configuration.ConfigurationResultEvent;
			import modules.configuration.Red5Connection;

			import mx.charts.series.ColumnSeries;
			import mx.collections.ArrayCollection;

			private var nc:NetConnection;
			public var ns:NetStream;
			private var serverClient:ServerClientBandwidth;
			private var chart:ColumnSeries;
			private var red5Connection:Red5Connection;

			[Bindable]
			private var chartData:ArrayCollection;

			[Bindable]
			private var bwMin:Number;

			private function onComplete():void
			{
//				bwMin=DataModel.getInstance().prefDic["bwCheckMin"];
//				red5Connection=new Red5Connection('bwcheck');
//				nc=red5Connection.getNetConnection();
//				nc.addEventListener(NetStatusEvent.NET_STATUS, onStatus);
			}

			private function set onPreferencesRetrieved(flag:Boolean):void
			{
				if (DataModel.getInstance().prefDic != null)
				{
					bwMin=DataModel.getInstance().prefDic["bwCheckMin"];
					red5Connection=new Red5Connection('bwcheck');
					nc=red5Connection.getNetConnection();
					nc.addEventListener(NetStatusEvent.NET_STATUS, onStatus);
				}
			}

			public function onStatus(event:NetStatusEvent):void
			{
				switch (event.info.code)
				{
					case "NetConnection.Connect.Success":
						serverClient=new ServerClientBandwidth();
						serverClient.connection=nc;
						serverClient.service="bwCheckService.onServerClientBWCheck";
						serverClient.addEventListener(BandwidthDetectEvent.DETECT_COMPLETE, onServerClientComplete);
				} //switch	
			}

			public function onServerClientComplete(event:BandwidthDetectEvent):void
			{
				chartData=new ArrayCollection([{Connection: resourceManager.getString('myResources', 'LABEL_NEEDED_BW'), BWDown: bwMin}, {Connection: resourceManager.getString('myResources', 'LABEL_REAL_BW'), BWDown: event.info.kbitDown}]);
				showBwInfo(event);
				dispatchResultEvent(event);
			}

			private function showBwInfo(event:BandwidthDetectEvent):void
			{
				Needed.text=resourceManager.getString('myResources', 'LABEL_NEEDED_BW') + ": " + bwMin + " Kb/s";
				Real.text=resourceManager.getString('myResources', 'LABEL_REAL_BW') + ": " + event.info.kbitDown + " Kb/s";
				bwInfo.visible=true;
			}

			private function dispatchResultEvent(event:BandwidthDetectEvent):void
			{
				var ev:ConfigurationResultEvent=new ConfigurationResultEvent(ConfigurationResultEvent.BANDWIDTH_RESULT, event.info.kbitDown >= bwMin);
				dispatchEvent(ev);
			}

			private function startCheck():void
			{
				serverClient.start();
			}
		]]>
	</fx:Script>

	<fx:Binding source="{DataModel.getInstance().preferencesRetrieved}"
				destination="onPreferencesRetrieved"/>

	<s:Label id="labelBandwidthCheck"
			 text="{resourceManager.getString('myResources','LABEL_BANDWIDTH_CHECK')}"
			 styleName="sectionTitleLabel"/>
	<mx:HRule styleName="sectionTitleHRule"
			  width="{labelBandwidthCheck.width}"
			  height="4"/>
	<s:HGroup width="100%"
			  id="allMenu"
			  visible="true">

		<s:HGroup width="100%">
			<s:VGroup id="explicacion">
				<s:VGroup width="100%"
						  height="100%">
					<mx:Spacer/>
					<s:Label text="{resourceManager.getString('myResources', 'CONFIGURATION_BW_MESSAGE1')+' '+resourceManager.getString('myResources', 'CONFIGURATION_BW_MESSAGE2')}"/>
					<mx:Spacer/>
					<s:Label text="{resourceManager.getString('myResources', 'CONFIGURATION_BW_MESSAGE3')+' '+resourceManager.getString('myResources', 'CONFIGURATION_BW_MESSAGE4')}"/>
				</s:VGroup>
				<s:Button id="comprobacionButton"
						  styleName="bigBlueButton"
						  label="{resourceManager.getString('myResources', 'CONFIGURATION_BW_TITTLE')}"
						  enabled="{!DataModel.getInstance().playing &amp;&amp; !DataModel.getInstance().recording}"
						  click="startCheck()"/>
				<s:VGroup id="bwInfo"
						  visible="false">
					<s:Label id="Needed"
							 styleName="bwResultLabel"/>
					<s:Label id="Real"
							 styleName="bwResultLabel"/>
				</s:VGroup>
			</s:VGroup>
		</s:HGroup>

		<s:HGroup width="100%"
				  horizontalAlign="right">
			<s:Panel title="{resourceManager.getString('myResources','TITLE_BANDWIDTH_CHART')}"
					 id="bwChart"
					 width="400"
					 height="400">
				<mx:ColumnChart id="myChart"
								dataProvider="{chartData}"
								showDataTips="true"
								width="340"
								height="320">
					<mx:horizontalAxis>
						<mx:CategoryAxis categoryField="Connection"/>
					</mx:horizontalAxis>
					<mx:series>
						<mx:ColumnSeries dataProvider="{chartData}"
										 yField="BWDown"
										 xField="Connection"
										 displayName="Kbit Down"/>
					</mx:series>
				</mx:ColumnChart>
				<mx:Legend dataProvider="{myChart}"/>
			</s:Panel>
		</s:HGroup>

	</s:HGroup>

</s:VGroup>
