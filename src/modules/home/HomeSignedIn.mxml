<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 width="100%"
		 verticalScrollPolicy="off"
		 creationComplete="onComplete()">
	
	<mx:Script>
		<![CDATA[
			
			import events.MessageOfTheDayEvent;
			
			import model.DataModel;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Image;
			import mx.controls.Label;
			import mx.controls.Text;
			
			private const SLIDE_CHANGE_DELAY:uint=10000; //10 seconds
			
			[Bindable]
			private var selectedIndex:int=0;
			
			private var slideTimer:Timer;
			
			[Bindable]
			private var messageArray:ArrayCollection = new ArrayCollection();
			
			protected function onComplete():void
			{
				slideTimer=new Timer(SLIDE_CHANGE_DELAY, 0);
				slideTimer.addEventListener(TimerEvent.TIMER, onTimerTick);
				getSignedInMessagesOfTheDay();
			}
			
			protected function onTimerTick(event:TimerEvent):void
			{
				var slideCount:int=appDescriptionViewStack.getChildren().length;
				if (slideCount > 0)
				{
					var currentlySelectedIndex:int=appDescriptionViewStack.selectedIndex;
					if (currentlySelectedIndex < (slideCount - 1))
						selectedIndex=currentlySelectedIndex + 1;
					else
						selectedIndex=0;
				}
			}
			
			public function getSignedInMessagesOfTheDay():void
			{
				if (DataModel.getInstance().isLoggedIn)
					new MessageOfTheDayEvent(MessageOfTheDayEvent.SIGNED_MESSAGE_OF_THE_DAY, DataModel.getInstance().currentlyActiveLocale).dispatch();
			}
			
			protected function set onSignedInMessagesOfTheDayRetrieved(value:Boolean):void
			{
				if (DataModel.getInstance().isLoggedIn)
				{
					messageArray=DataModel.getInstance().messagesOfTheDayData;
					if (messageArray.length > 0)
					{
						slideTimer.stop();
						appDescriptionViewStack.removeAllChildren();
						callLater(addMessagesToContainer);
					} else {
						signedMotdBox.includeInLayout = false;
						signedMotdBox.visible = false;
					}
				}
			}
			
			protected function addMessagesToContainer():void{
				for each (var messageData:Object in messageArray)
				{
					appDescriptionViewStack.addChild(generateMessageBox(messageData));
				}
				selectedIndex=0;
				slideTimer.start();
				signedMotdBox.includeInLayout=true;
				signedMotdBox.visible=true;
			}
			
			protected function generateMessageBox(messageData:Object):HBox
			{
				
				var messageImage:Image=new Image();
				messageImage.source=messageData.resourceUrl;
				messageImage.width=240;
				messageImage.height=180;
				messageImage.scaleContent=true;
				
				var titleLabel:Label=new Label();
				titleLabel.text=messageData.title;
				titleLabel.styleName="sectionInfoTitleLabel";
				
				var messageText:Text=new Text();
				messageText.text=messageData.message;
				messageText.percentWidth=100;
				messageText.percentHeight=100;
				
				var messageVBox:VBox=new VBox();
				messageVBox.percentWidth=100;
				messageVBox.percentHeight=100;
				messageVBox.setStyle("verticalAlign", "middle");
				messageVBox.addChild(titleLabel);
				messageVBox.addChild(messageText);
				
				var motdBox:HBox=new HBox();
				motdBox.percentWidth=100;
				motdBox.setStyle("verticalAlign", "middle");
				motdBox.addChild(messageImage);
				motdBox.addChild(messageVBox);
				
				return motdBox;
			}
			
			public function set onLanguageChanged(value:Boolean):void{
				getSignedInMessagesOfTheDay();
			}
			
		]]>
	</mx:Script>
	
	<mx:Binding source="{DataModel.getInstance().messagesOfTheDayRetrieved}"
				destination="onSignedInMessagesOfTheDayRetrieved"/>
	
	<mx:Binding source="{DataModel.getInstance().languageChanged}"
				destination="onLanguageChanged"/>

	<mx:VBox id="signedMotdBox"
			 styleName="sectionInfoBox"
			 width="100%"
			 includeInLayout="false"
			 visible="false">
		<mx:HBox id="descriptionPaginationSigned"/>
		<mx:ViewStack id="appDescriptionViewStack"
					  selectedIndex="{selectedIndex}"
					  width="100%"
					  resizeToContent="true">
		</mx:ViewStack>

		<mx:HBox horizontalAlign="right"
				 width="100%">
			<mx:TabBar dataProvider="{myHomeViewStack}"/>
		</mx:HBox>
	</mx:VBox>
	
	<mx:ViewStack id="myHomeViewStack">
		
	</mx:ViewStack>

</mx:VBox>
