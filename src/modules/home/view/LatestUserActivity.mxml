<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:skins="skins.*"
		  xmlns:hulstkamp="com.hulstkamp.*"
		  width="100%"
		  height="100%">
	<fx:Script>
		<![CDATA[
			import com.hulstkamp.AhRatingComponentStarSkin;
			
			import control.URLManager;
			
			import modules.home.event.HomepageEvent;
			
			import model.DataModel;
			
			import mx.collections.ArrayCollection;
			import mx.events.ListEvent;
			
			import view.common.TimeFormatter;
			
			import vo.EvaluationVO;

			[Bindable]
			private var latestReceivedAssessmentsList:ArrayCollection;
			[Bindable]
			private var latestDoneAssessmentsList:ArrayCollection;

			[Bindable]
			public var _timeFormatter:TimeFormatter=new TimeFormatter();

			protected function latestReceivedAssessmentsDatagrid_changeHandler(event:ListEvent):void
			{
				var selectedItem:EvaluationVO=(DataGrid(event.target).selectedItem) as EvaluationVO;
				var responseName:String=selectedItem.responseFileIdentifier;
				var urlResponseName:String=responseName.replace("audio/", "");
				
				//BabeliaBrowserManager.getInstance().updateURL(BabeliaBrowserManager.index2fragment(ViewChangeEvent.VIEWSTACK_EVALUATION_MODULE_INDEX), BabeliaBrowserManager.REVISE, urlResponseName);
				//BabeliaBrowserManager.getInstance().parseURL(null);
				URLManager.getInstance().redirect('/submission/view/'+urlResponseName);
			}


			protected function latestDoneAssessmentsDatagrid_changeHandler(event:ListEvent):void
			{
				var selectedItem:EvaluationVO=(DataGrid(event.target).selectedItem) as EvaluationVO;
				var responseName:String=selectedItem.responseFileIdentifier;
				var urlResponseName:String=responseName.replace("audio/", "");

				//BabeliaBrowserManager.getInstance().updateURL(BabeliaBrowserManager.index2fragment(ViewChangeEvent.VIEWSTACK_EVALUATION_MODULE_INDEX), BabeliaBrowserManager.VIEW, urlResponseName);
				//BabeliaBrowserManager.getInstance().parseURL(null);
				URLManager.getInstance().redirect('/submission/view/'+urlResponseName);
			}


			protected function latestUploadedVideosDatagrid_changeHandler(event:ListEvent):void
			{
				// TODO Auto-generated method stub
			}

			protected function set retrieveUserActivity(value:Boolean):void
			{
				if (DataModel.getInstance().isLoggedIn == true)
				{
					new HomepageEvent(HomepageEvent.LATEST_RECEIVED_ASSESSMENTS).dispatch();
					new HomepageEvent(HomepageEvent.LATEST_DONE_ASSESSMENTS).dispatch()
				}
			}

			protected function set handleLatestReceivedAssessments(value:Boolean):void
			{
				var lrDataprovider:ArrayCollection=DataModel.getInstance().userLatestReceivedAssessments;
				latestReceivedAssessmentsList=lrDataprovider;
				latestReceivedAssessmentsDatagrid.rowCount=lrDataprovider.length;
			}

			protected function set handleLatestDoneAssessments(value:Boolean):void
			{
				var ldDataprovider:ArrayCollection=DataModel.getInstance().userLatestDoneAssessments;
				latestDoneAssessmentsList=ldDataprovider;
				latestDoneAssessmentsDatagrid.rowCount=ldDataprovider.length;
			}
			
			public function resetComponent():void{
				latestReceivedAssessmentsList=null;
				latestDoneAssessmentsList=null;
			}
		]]>
	</fx:Script>

	<fx:Binding source="{DataModel.getInstance().isLoggedIn}"
				destination="retrieveUserActivity"/>
	<fx:Binding source="{DataModel.getInstance().userLatestReceivedAssessmentsRetrieved}"
				destination="handleLatestReceivedAssessments"/>
	<fx:Binding source="{DataModel.getInstance().userLatestDoneAssessmentsRetrieved}"
				destination="handleLatestDoneAssessments"/>

	<s:VGroup paddingTop="16"
			  paddingBottom="16"
			  paddingLeft="16"
			  paddingRight="16"
			  width="100%">
		<s:Label id="latestReceivedAssessmentsTitle"
				 text="{resourceManager.getString('myResources','USER_LATEST_RECEIVED_ASSESSMENTS')}"
				 styleName="sectionTitleLabel"/>
		<s:Line width="{latestReceivedAssessmentsTitle.width}">
			<s:stroke>
				<mx:SolidColorStroke weight="3"
									 color="#268caa"/>
			</s:stroke>
		</s:Line>
		<!--
		<s:Label text="Explanation"/>
		-->
		<mx:DataGrid id="latestReceivedAssessmentsDatagrid"
					 width="100%"
					 change="latestReceivedAssessmentsDatagrid_changeHandler(event)"
					 dataProvider="{latestReceivedAssessmentsList}"
					 horizontalScrollPolicy="off"
					 verticalAlign="middle">
			<mx:columns>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'ORIGINAL_VIDEO')}"
								   width="96"
								   dataField="exerciseDuration">
					<mx:itemRenderer>
						<fx:Component>
							<s:MXDataGridItemRenderer>
								<s:Group width="96"
										 height="72">
									<mx:Image id="thumbnail"
											  scaleContent="true"
											  source="{data.exerciseThumbnailUri == 'nothumb.png' ? parentDocument.thumbUrl+ '/' +data.responseThumbnailUri : parentDocument.thumbUrl + '/' + data.exerciseName + '/default.jpg'}"
											  width="96"
											  height="72"
											  toolTip="{data.exerciseTitle}"/>
									<s:TextInput text="{parentDocument._timeFormatter.format(data.exerciseDuration)}"
												 styleName="videoDurationLabel"
												 x="64"
												 y="0"
												 width="32"
												 height="16"
												 editable="false"
												 selectable="false"/>
								</s:Group>
							</s:MXDataGridItemRenderer>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'JUDGE')}"
								   width="96"
								   dataField="responseUserName">
					<mx:itemRenderer>
						<fx:Component>
							<s:MXDataGridItemRenderer>
								<s:VGroup width="96"
										  height="72"
										  verticalAlign="middle">
									<s:TextInput text="{data.responseUserName}"
												 styleName="videoDurationLabel"
												 width="96"
												 height="16"
												 editable="false"
												 selectable="false"
												 textAlign="center"/>
								</s:VGroup>
							</s:MXDataGridItemRenderer>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'DATE')}"
								   dataField="addingDate"/>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'SELECTEDCHAR')}"
								   dataField="responseCharacterName"/>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'ASSESSMENT_COUNT')}"
								   dataField="responseRatingAmount"/>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources','INTONATION_SCORE')}"
								   dataField="intonationScore">
					<mx:itemRenderer>
						<fx:Component>
							<s:MXDataGridItemRenderer>
								<s:VGroup height="72"
										  verticalAlign="middle"
										  horizontalAlign="center">
									<hulstkamp:AhFxRatingComponent skinClass="com.hulstkamp.AhRatingComponentStarSkin"
																   enabled="false"
																   rating="{data.intonationScore}"/>
								</s:VGroup>
							</s:MXDataGridItemRenderer>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources','FLUENCY_SCORE')}"
								   dataField="fluencyScore">
					<mx:itemRenderer>
						<fx:Component>
							<s:MXDataGridItemRenderer>
								<s:VGroup height="72"
										  verticalAlign="middle"
										  horizontalAlign="center">
									<hulstkamp:AhFxRatingComponent skinClass="com.hulstkamp.AhRatingComponentStarSkin"
																   enabled="false"
																   rating="{data.fluencyScore}"/>
								</s:VGroup>
							</s:MXDataGridItemRenderer>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources','RHYTHM_SCORE')}"
								   dataField="rhythmScore">
					<mx:itemRenderer>
						<fx:Component>
							<s:MXDataGridItemRenderer>
								<s:VGroup height="72"
										  verticalAlign="middle"
										  horizontalAlign="center">
									<hulstkamp:AhFxRatingComponent skinClass="com.hulstkamp.AhRatingComponentStarSkin"
																   enabled="false"
																   rating="{data.rhythmScore}"/>
								</s:VGroup>
							</s:MXDataGridItemRenderer>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources','SPONTANEITY_SCORE')}"
								   dataField="spontaneityScore">
					<mx:itemRenderer>
						<fx:Component>
							<s:MXDataGridItemRenderer>
								<s:VGroup height="72"
										  verticalAlign="middle"
										  horizontalAlign="center">
									<hulstkamp:AhFxRatingComponent skinClass="com.hulstkamp.AhRatingComponentStarSkin"
																   enabled="false"
																   rating="{data.spontaneityScore}"/>
								</s:VGroup>
							</s:MXDataGridItemRenderer>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources','OVERALL_SCORE')}"
								   dataField="overallScore">
					<mx:itemRenderer>
						<fx:Component>
							<s:MXDataGridItemRenderer>
								<s:VGroup height="72"
										  verticalAlign="middle"
										  horizontalAlign="center">
									<hulstkamp:AhFxRatingComponent skinClass="com.hulstkamp.AhRatingComponentStarSkin"
																   enabled="false"
																   rating="{data.overallScore}"/>
								</s:VGroup>
							</s:MXDataGridItemRenderer>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
	</s:VGroup>

	<skins:HorizontalSeparatorLine width="100%"/>

	<s:VGroup paddingTop="16"
			  paddingBottom="16"
			  paddingLeft="16"
			  paddingRight="16"
			  width="100%">
		<s:Label id="latestDoneAssessmentsTitle"
				 text="{resourceManager.getString('myResources','USER_LATEST_DONE_ASSESSMENTS')}"
				 styleName="sectionTitleLabel"/>
		<s:Line width="{latestDoneAssessmentsTitle.width}">
			<s:stroke>
				<mx:SolidColorStroke weight="3"
									 color="#268caa"/>
			</s:stroke>
		</s:Line>
		<!--
		<s:Label text="Explanation"/>
		-->
		<mx:DataGrid id="latestDoneAssessmentsDatagrid"
					 width="100%"
					 change="latestDoneAssessmentsDatagrid_changeHandler(event)"
					 dataProvider="{latestDoneAssessmentsList}"
					 horizontalScrollPolicy="off"
					 verticalAlign="middle">
			<mx:columns>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'ORIGINAL_VIDEO')}"
								   width="96"
								   dataField="exerciseDuration">
					<mx:itemRenderer>
						<fx:Component>
							<s:MXDataGridItemRenderer>
								<s:Group width="96"
										 height="72">
									<mx:Image id="thumbnail"
											  scaleContent="true"
											  source="{data.exerciseThumbnailUri == 'nothumb.png' ? parentDocument.thumbUrl+ '/' +data.responseThumbnailUri : parentDocument.thumbUrl + '/' + data.exerciseName + '/default.jpg'}"
											  width="96"
											  height="72"
											  toolTip="{data.exerciseTitle}"/>
									<s:TextInput text="{parentDocument._timeFormatter.format(data.exerciseDuration)}"
												 styleName="videoDurationLabel"
												 x="64"
												 y="0"
												 width="32"
												 height="16"
												 editable="false"
												 selectable="false"/>
								</s:Group>
							</s:MXDataGridItemRenderer>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'RECORDER')}"
								   width="96"
								   dataField="responseUserName">
					<mx:itemRenderer>
						<fx:Component>
							<s:MXDataGridItemRenderer>
								<s:Group width="96"
										 height="72">
									<mx:Image id="thumbnail"
											  scaleContent="true"
											  source="{data.responseThumbnailUri == 'nothumb.png' ? parentDocument.thumbUrl+ '/' + data.responseThumbnailUri : parentDocument.thumbUrl + '/' + data.responseFileIdentifier + '/default.jpg'}"
											  width="96"
											  height="72"/>
									<s:TextInput text="{data.responseUserName}"
												 styleName="videoDurationLabel"
												 x="0"
												 y="56"
												 width="96"
												 height="16"
												 editable="false"
												 selectable="false"
												 textAlign="center"/>
								</s:Group>
							</s:MXDataGridItemRenderer>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'DATE')}"
								   dataField="addingDate"/>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'SELECTEDCHAR')}"
								   dataField="responseCharacterName"/>
				<!--
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'ASSESSMENT_COUNT')}"
								   dataField="responseRatingAmount"/>
				-->
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources','INTONATION_SCORE')}"
								   dataField="intonationScore">
					<mx:itemRenderer>
						<fx:Component>
							<s:MXDataGridItemRenderer>
								<s:VGroup height="72"
										  verticalAlign="middle"
										  horizontalAlign="center">
									<hulstkamp:AhFxRatingComponent skinClass="com.hulstkamp.AhRatingComponentStarSkin"
																   enabled="false"
																   rating="{data.intonationScore}"/>
								</s:VGroup>
							</s:MXDataGridItemRenderer>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources','FLUENCY_SCORE')}"
								   dataField="fluencyScore">
					<mx:itemRenderer>
						<fx:Component>
							<s:MXDataGridItemRenderer>
								<s:VGroup height="72"
										  verticalAlign="middle"
										  horizontalAlign="center">
									<hulstkamp:AhFxRatingComponent skinClass="com.hulstkamp.AhRatingComponentStarSkin"
																   enabled="false"
																   rating="{data.fluencyScore}"/>
								</s:VGroup>
							</s:MXDataGridItemRenderer>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources','RHYTHM_SCORE')}"
								   dataField="rhythmScore">
					<mx:itemRenderer>
						<fx:Component>
							<s:MXDataGridItemRenderer>
								<s:VGroup height="72"
										  verticalAlign="middle"
										  horizontalAlign="center">
									<hulstkamp:AhFxRatingComponent skinClass="com.hulstkamp.AhRatingComponentStarSkin"
																   enabled="false"
																   rating="{data.rhythmScore}"/>
								</s:VGroup>
							</s:MXDataGridItemRenderer>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources','SPONTANEITY_SCORE')}"
								   dataField="spontaneityScore">
					<mx:itemRenderer>
						<fx:Component>
							<s:MXDataGridItemRenderer>
								<s:VGroup height="72"
										  verticalAlign="middle"
										  horizontalAlign="center">
									<hulstkamp:AhFxRatingComponent skinClass="com.hulstkamp.AhRatingComponentStarSkin"
																   enabled="false"
																   rating="{data.spontaneityScore}"/>
								</s:VGroup>
							</s:MXDataGridItemRenderer>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
				<mx:DataGridColumn headerText="{resourceManager.getString('myResources','OVERALL_SCORE')}"
								   dataField="overallScore">
					<mx:itemRenderer>
						<fx:Component>
							<s:MXDataGridItemRenderer>
								<s:VGroup height="72"
										  verticalAlign="middle"
										  horizontalAlign="center">
									<hulstkamp:AhFxRatingComponent skinClass="com.hulstkamp.AhRatingComponentStarSkin"
																   enabled="false"
																   rating="{data.overallScore}"/>
								</s:VGroup>
							</s:MXDataGridItemRenderer>
						</fx:Component>
					</mx:itemRenderer>
				</mx:DataGridColumn>
			</mx:columns>
		</mx:DataGrid>
	</s:VGroup>


	<!-- This functionality is not visible for now
	<skins:HorizontalSeparatorLine width="100%"/>

	<s:Label id="latestUploadedVideosTitle"
			 text="{resourceManager.getString('myResources','USER_LATEST_UPLOADED_VIDEOS')}"
			 styleName="sectionTitleLabel"/>
	<s:Line width="{latestUploadedVideosTitle.width}">
		<s:stroke>
			<mx:SolidColorStroke weight="3" color="#268caa"/>
		</s:stroke>
	</s:Line>
	<s:Label text="Explanation"/>
	<mx:DataGrid id="latestUploadedVideosDatagrid"
				 width="100%"
				 change="latestUploadedVideosDatagrid_changeHandler(event)">
	</mx:DataGrid>
	-->

</s:VGroup>
