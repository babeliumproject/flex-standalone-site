<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns:exercises="modules.main.*"
		 width="100%"
		 horizontalAlign="center"
		 creationComplete="onComplete()"
		 xmlns:exercises1="commands.exercises.*">
	<mx:Metadata>
        [ResourceBundle("myResources")]
    </mx:Metadata>
	<mx:Script>
		<![CDATA[
			import events.ExerciseEvent;

			import model.DataModel;

			import modules.search.VideoPaginator;

			import mx.collections.ArrayCollection;
			import mx.controls.Button;
			import mx.core.Application;

			import vo.ExerciseVO;


			[Bindable]
			private var _dataProvider:ArrayCollection;

			[Bindable]
			private var _currentPage:int=1;

			public var thumbURL:String='';

			public function onComplete():void
			{
				thumbURL=DataModel.getInstance().thumbURL;
				new ExerciseEvent(ExerciseEvent.GET_RECORDABLE_EXERCISES).dispatch();
			}

			public function set handleExercisesRetrieve(value:Boolean):void
			{
				if (DataModel.getInstance().availableExercisesRetrieved.getItemAt(DataModel.RECORDING_MODULE))
				{
					exerciseListDatagrid.rowCount=DataModel.getInstance().availableRecordableExercises.length;
					_dataProvider=DataModel.getInstance().availableRecordableExercises;

					createPagination();

					DataModel.getInstance().availableExercisesRetrieved.setItemAt(false, DataModel.RECORDING_MODULE);
				}
			}

			public function createPagination():void
			{
				VideoPaginator.createPaginationMenu(_dataProvider.length, DataModel.getInstance().pageSize, _currentPage, DataModel.getInstance().numberOfPagesNav, paginationBox, navigateToPage);
				refreshDataProvider();
			}

			private function navigateToPage(event:MouseEvent):void
			{
				//Go to the page
				_currentPage=int((event.target as Button).id);
				//Refresh the pagination controls
				createPagination();
			}

			public function refreshDataProvider():void
			{
				var current:int=_currentPage - 1;
				var pageSize:int=DataModel.getInstance().pageSize;
				var dataTemp:ArrayCollection=new ArrayCollection(_dataProvider.source.slice((current * pageSize), (current * pageSize) + pageSize));
				exerciseListDatagrid.rowCount=dataTemp.length;
				exerciseListDatagrid.dataProvider=dataTemp;
			}

			private function changeHandler(event:Event):void
			{
				var obj:ExerciseVO=DataGrid(event.target).selectedItem as ExerciseVO;
				new ExerciseEvent(ExerciseEvent.EXERCISE_SELECTED, obj).dispatch();
				callLater(updateVerticalScroll);
			}

			public function thumbSet(data:Object):String
			{
				return (thumbURL + "/" + data.thumbnailUri);
			}

			public function updateVerticalScroll():void
			{
				Application.application.verticalScrollPosition=0;
			}
		]]>
	</mx:Script>

	<mx:Binding source="{DataModel.getInstance().availableExercisesRetrieved.getItemAt(DataModel.RECORDING_MODULE)}"
				destination="handleExercisesRetrieve"/>


	<mx:DataGrid verticalAlign="middle"
				 width="100%"
				 height="100%"
				 id="exerciseListDatagrid"
				 dataProvider="{_dataProvider}"
				 enabled="{!DataModel.getInstance().recordingExercise}"
				 change="changeHandler(event)"
				 verticalScrollPolicy="off"
				 sortableColumns="false"
				 draggableColumns="false"
				 backgroundAlpha="0"
				 borderThickness="0"
				 useHandCursor="true">
		<mx:columns>
			<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'MESSAGE_EXERCISE_LIST')}"
							   editable="false">
				<mx:itemRenderer>
					<mx:Component>
						<exercises:ExerciseListItem specificClickListeners="false"/>
					</mx:Component>
				</mx:itemRenderer>
			</mx:DataGridColumn>
		</mx:columns>
	</mx:DataGrid>
	<mx:HBox id="paginationBox"
			 width="100%"/>
</mx:VBox>
