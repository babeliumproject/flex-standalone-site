<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns:rating="com.asfusion.controls.*"
		 horizontalAlign="left"
		 paddingTop="2"
		 paddingBottom="2"
		 paddingLeft="2"
		 paddingRight="2"
		 height="30"
		 borderStyle="solid"
		 cornerRadius="6">

	<mx:Script>
		<![CDATA[
			import events.ExerciseEvent;
			
			import model.DataModel;
			
			import mx.core.Application;
			import mx.managers.PopUpManager;
			
			import view.common.ReportInappropriatePopUp;
			
			import vo.ExerciseReportVO;
			import vo.ExerciseScoreVO;
			import vo.ExerciseVO;

			private var _exercise:ExerciseVO;
			
			[Bindable]
			private var _dataAvailable:Boolean = false;
			
			private var reportPopUp:ReportInappropriatePopUp;

			public function set exerciseData(exercise:ExerciseVO):void
			{
				if(exercise){
					_exercise=exercise;
					_dataAvailable = true;
					updateComponents();
				} else {
					_dataAvailable = false;
					disableComponents();
				}
			}

			public function get exerciseData():ExerciseVO
			{
				return _exercise;
			}

			private function updateComponents():void
			{
				rating.value=_exercise.avgRating;
				var userId:int = DataModel.getInstance().loggedUser.id;
				
				var score:ExerciseScoreVO = new ExerciseScoreVO();
				var report:ExerciseReportVO = new ExerciseReportVO();
				score.exerciseId = _exercise.id;
				score.userId = userId;
				report.exerciseId = _exercise.id;
				report.userId = userId;
				
				new ExerciseEvent(ExerciseEvent.USER_RATED_EXERCISE,null,null,score).dispatch();
				new ExerciseEvent(ExerciseEvent.USER_REPORTED_EXERCISE,null,report,null).dispatch();
			}
			
			private function disableComponents():void{
				if(!DataModel.getInstance().isLoggedIn || !_dataAvailable){
					rating.value = 0;
				}
			}

			protected function ratingClickHandler(event:MouseEvent):void
			{
				if (DataModel.getInstance().isLoggedIn && _dataAvailable)
				{
					var score:ExerciseScoreVO=new ExerciseScoreVO();
					score.userId=DataModel.getInstance().loggedUser.id;
					score.suggestedScore=rating.selectedValue;
					score.exerciseId=_exercise.id;
					new ExerciseEvent(ExerciseEvent.RATE_EXERCISE, null, null, score).dispatch();
				}
			}

			protected function reportVideoClickHandler(event:MouseEvent):void
			{
				if (DataModel.getInstance().isLoggedIn && _dataAvailable)
				{
					reportPopUp = ReportInappropriatePopUp(PopUpManager.createPopUp(Application.application.parent, ReportInappropriatePopUp, true));
					PopUpManager.centerPopUp(reportPopUp);
					reportPopUp.exerciseData = _exercise;
				}
			}
		]]>
	</mx:Script>

	<mx:HBox paddingTop="4" paddingLeft="4">
		<rating:Rating id="rating"
					   value="0"
					   liveRollOver="{DataModel.getInstance().isLoggedIn &amp;&amp; !DataModel.getInstance().userRatedExercise &amp;&amp; _dataAvailable  }"
					   click="ratingClickHandler(event)"/>
	</mx:HBox>
	<mx:VRule height="24"/>
	<mx:HBox horizontalAlign="right"
			 paddingBottom="0"
			 paddingTop="0"
			 paddingLeft="0"
			 paddingRight="0"
			 width="100%">
		<mx:LinkButton id="reportVideo"
					   label="Report"
					   toolTip="Report innapropriate video."
					   icon="@Embed(source='../../../../resources/images/shield.png')"
					   enabled="{DataModel.getInstance().isLoggedIn &amp;&amp; !DataModel.getInstance().userReportedExercise &amp;&amp; _dataAvailable}"
					   click="reportVideoClickHandler(event)"/>
	</mx:HBox>

</mx:HBox>
