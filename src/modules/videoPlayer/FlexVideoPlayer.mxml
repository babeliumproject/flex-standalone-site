<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="vertical" horizontalAlign="center"
	xmlns:video="modules.videoPlayer.*"
	backgroundAlpha="0.0"
	creationComplete="init()">

	<mx:HBox>
		<mx:Button label="Grabar!"
			   fontWeight="normal"
			   width="80"
			   height="30"
			   labelPlacement="bottom"
			   click="click(event)"
			   enabled="true"
			   visible="true">
		</mx:Button>
		<mx:Button label="Ver!"
			   fontWeight="normal"
			   width="80"
			   height="30"
			   labelPlacement="bottom"
			   click="click2(event)"
			   enabled="true"
			   visible="true">
		</mx:Button>
		<mx:Button label="Cambiar!"
			   fontWeight="normal"
			   width="80"
			   height="30"
			   labelPlacement="bottom"
			   click="click3(event)"
			   enabled="true"
			   visible="true">
		</mx:Button>
		<mx:Button label="Mutear!"
			   fontWeight="normal"
			   width="80"
			   height="30"
			   labelPlacement="bottom"
			   click="click4(event)"
			   enabled="true"
			   visible="true">
		</mx:Button>
	</mx:HBox>

	<video:VideoPlayerBabelia id="VP" subtitles="true" arrows="true" seek="true" 
		autoScale="false" autoPlay="true" videoSource="cue_cuatro.flv" skin="white"
		streamSource="rtmp://localhost:1935/oflaDemo" width="533" height="300" />
	
	<mx:Script>
		<![CDATA[
			import modules.videoPlayer.events.babelia.RecordingEvent;
			import mx.collections.ArrayCollection;
			import modules.videoPlayer.events.VideoPlayerEvent;
			import mx.controls.Alert;
			import vo.SubtitleLineVO;
			import vo.SubtitleVO;
			import events.SubtitleEvent;
			import model.DataModel;
			
			private var arrows:ArrayCollection = new ArrayCollection();
			private var role:String;
			private var muted:Boolean = false;
			
			public function init() : void
			{
				var subtitle:SubtitleVO = new SubtitleVO();
				subtitle.exerciseId = 2;
				subtitle.language = "Spanish";
				new SubtitleEvent(SubtitleEvent.GET_SUBTITLE_LINES, subtitle).dispatch();
				
				VP.addEventListener(VideoPlayerEvent.METADATA_RETRIEVED, onMetadata);
			}
			
			public function set onSubtitleRetrieved(flag:Boolean) : void
			{

				for each ( var sub:SubtitleLineVO in DataModel.getInstance().subtitleDp )
				{
					if ( role == null )
						role = sub.role;
					arrows.addItem({time:sub.showTime,role:sub.role});
				}
			}
			
			/**
			 * TODO: This method only test our new features
			 */
			public function onMetadata(e:Event) : void
			{
				VP.setArrows(arrows, role);
				VP.startTalking("prueba_rol", 3);
			}
			
			public function click(e:Event) : void
			{
				VP.state = VideoPlayerBabelia.RECORD_BOTH_STATE; // start "recording"
				VP.addEventListener(RecordingEvent.END, onFinishedRecording);
			}
			
			public function click2(e:Event) : void
			{
				VP.state = VideoPlayerBabelia.PLAY_STATE; // start video view
			}
			
			public function click3(e:Event) : void
			{
				VP.removeArrows();
				VP.videoSource = "kutsi9.flv"; // start video view
			}
			
			public function click4(e:Event) : void
			{
				muted = !muted;
				VP.muteVideo(muted);
			}
			
			public function onFinishedRecording(e:RecordingEvent) : void
			{
				Alert.show("Ha terminado la grabaciÃ³n de: " + e.fileName);
			}
			
		]]>
	</mx:Script>
	
	<mx:Binding source="DataModel.getInstance().subtitleDp != null"
				destination="onSubtitleRetrieved" />
	
</mx:Application>
