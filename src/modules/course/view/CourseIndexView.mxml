<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  xmlns:skins="skins.*"
		  paddingLeft="16"
		  paddingRight="16"
		  paddingTop="16"
		  paddingBottom="16"
		  horizontalAlign="center"
		  implements="modules.IPinnedGroupInterface"
		  creationComplete="onComplete(event)">
	<fx:Script>
		<![CDATA[
			import model.DataModel;
			
			import mx.resources.ResourceManager;
			
			import modules.course.event.CourseEvent;
			
			import mx.binding.utils.BindingUtils;
			import mx.binding.utils.ChangeWatcher;
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.utils.ObjectUtil;
			
			private var _model:DataModel=DataModel.getInstance();
			
			private var userCourseData:ArrayCollection;
			private var commitOnly:Boolean=false;
			private var useWeakReference:Boolean=false;
			
			private var cw1:ChangeWatcher;
			
			protected function onComplete(event:FlexEvent):void
			{
				cw1=BindingUtils.bindSetter(userCoursesRetrieved, _model, 'courseListRetrieved', commitOnly, useWeakReference);
			}
			
			public function resetGroup():void
			{
				myCoursesTable.dataProvider=null;
				userCourseData=null;
				
				//Reset the related model data
				_model.courseList=null;
			}
			
			public function unpinGroup():void
			{
				if (cw1) cw1.unwatch();
				cw1=null;
				
				this.removeEventListener(FlexEvent.CREATION_COMPLETE, onComplete);
			}
			
			public function userCoursesRetrieved(value:Boolean):void{
				userCourseData = _model.courseList;
				if(userCourseData){
					myCoursesTable.dataProvider=userCourseData;
					trace(ObjectUtil.toString(userCourseData));
					noCourse.visible=false;
					noCourse.includeInLayout=false;
					myCoursesTable.visible=true;
					myCoursesTable.includeInLayout=true;
				} else {
					noCourse.visible=true;
					noCourse.includeInLayout=true;
					myCoursesTable.visible=false;
					myCoursesTable.includeInLayout=false;
				}
			}
		]]>
	</fx:Script>
	
	
	<s:HGroup width="100%">
		<s:Label id="viewTitleLbl"
				 text="{ResourceManager.getInstance().getString('myResources','COURSES')}"
				 styleName="h1"/>
	</s:HGroup>
	
	
	<s:Label id="noCourse"
			 text="{ResourceManager.getInstance().getString('myResources','YOU_ARE_NOT_CURRENTLY_ENROLLED_IN_ANY_COURSE')}"/>
	
	<mx:DataGrid id="myCoursesTable"
				 width="100%"
				 horizontalScrollPolicy="off"
				 verticalScrollPolicy="off"
				 headerHeight="0"
				 horizontalGridLines="true"
				 horizontalGridLineColor="0xaaaaaa"
				 contentBackgroundAlpha="0.0"
				 alternatingItemColors="{[]}"
				 selectable="false"
				 variableRowHeight="true">
		<mx:columns>
			<mx:DataGridColumn itemRenderer="modules.course.view.CourseItemRenderer"/>
		</mx:columns>
	</mx:DataGrid>

</s:VGroup>