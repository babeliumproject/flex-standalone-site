<?xml version="1.0" encoding="utf-8"?>
<s:MXDataGridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
						  xmlns:s="library://ns.adobe.com/flex/spark"
						  xmlns:mx="library://ns.adobe.com/flex/mx"
						  width="100%"
						  creationComplete="completeHandler()"
						  xmlns:controls="com.asfusion.controls.*">

	<s:layout>
		<s:HorizontalLayout paddingTop="4"
							paddingBottom="4"
							paddingLeft="8"
							paddingRight="8"
							verticalAlign="middle"/>
	</s:layout>


	<s:VGroup id="thumbnailsBox">
		<mx:Image id="exerciseThumbnail"
				  scaleContent="true"
				  source="{getExerciseImageSource(data as EvaluationVO)}"
				  autoLoad="true"
				  width="60"
				  height="45"/>
		<mx:Image id="responseThumbnail"
				  scaleContent="true"
				  source="{getResponseImageSource(data as EvaluationVO)}"
				  autoLoad="true"
				  width="60"
				  height="45"/>
	</s:VGroup>

	<s:VGroup id="assessmentDataBox"
			  width="100%"
			  gap="2">

		<s:HGroup id="difficultyLanguageTitleBox"
				  horizontalAlign="left"
				  verticalAlign="middle"
				  gap="2"
				  width="100%">
			<mx:Image id="exerciseLanguage"
					  width="16"
					  height="16"
					  source="{getFlagSource(data as EvaluationVO)}"/>
			<s:HGroup id="avgDifficultyIndicator"
					  styleName="roundedBorderWhiteBox">
				<s:Label text="{getLevelCorrespondence(data.exerciseAvgDifficulty)}"/>
			</s:HGroup>
			<s:Label id="exerciseTitle"
					 text="{data.exerciseTitle}"
					 width="100%"
					 textAlign="left"/>
		</s:HGroup>

		<mx:HRule width="100%"
				  height="1"/>

		<s:HGroup id="selectedRoleRatingAmountBox"
				  width="100%">
			<mx:Image id="roleIcon"
					  source="@Embed('../../resources/images/roles.png')"
					  toolTip="{resourceManager.getString('myResources','SELECTEDCHAR')}"/>
			<s:Label text="{data.responseCharacterName}"/>
			<mx:Spacer/>
			<s:Label text="{resourceManager.getString('myResources','BALORAZIOKOP')+':'}"
					 styleName="boldLabel"/>
			<s:Label text="{data.responseRatingAmount}"/>
		</s:HGroup>

		<s:HGroup width="100%"
				  horizontalAlign="center">
			<s:VGroup width="100%">
				<s:HGroup id="intonationBox"
						  width="100%">
					<s:Label text="{resourceManager.getString('myResources','AVG')+' '+resourceManager.getString('myResources','LABEL_INTONATION_SCORE')+':' }"/>
					<s:HGroup horizontalAlign="right"
							  width="100%">
						<controls:Rating value="{data.intonationScoreAverage}"
										 liveRollOver="false"/>
					</s:HGroup>
				</s:HGroup>
				<s:HGroup id="rhythmBox"
						  width="100%">
					<s:Label text="{resourceManager.getString('myResources','AVG')+' '+resourceManager.getString('myResources','LABEL_RHYTHM_SCORE')+':' }"/>
					<s:HGroup horizontalAlign="right"
							  width="100%">
						<controls:Rating value="{data.rhythmScoreAverage}"
										 liveRollOver="false"/>
					</s:HGroup>
				</s:HGroup>
			</s:VGroup>

			<s:VGroup width="100%">
				<s:HGroup id="fluencyBox"
						  width="100%">
					<s:Label text="{resourceManager.getString('myResources','AVG')+' '+resourceManager.getString('myResources','LABEL_FLUENCY_SCORE')+':' }"/>
					<s:HGroup horizontalAlign="right"
							  width="100%">
						<controls:Rating value="{data.fluencyScoreAverage}"
										 liveRollOver="false"/>
					</s:HGroup>
				</s:HGroup>
				<s:HGroup id="spontaneityBox"
						  width="100%">
					<s:Label text="{resourceManager.getString('myResources','AVG')+' '+resourceManager.getString('myResources','LABEL_SPONTANEITY_SCORE')+':' }"/>
					<s:HGroup horizontalAlign="right"
							  width="100%">
						<controls:Rating value="{data.spontaneityScoreAverage}"
										 liveRollOver="false"/>
					</s:HGroup>
				</s:HGroup>
			</s:VGroup>
		</s:HGroup>
		<s:HGroup id="overallBox"
				  width="100%"
				  horizontalAlign="center">
			<s:Label text="{resourceManager.getString('myResources','AVG')+' '+resourceManager.getString('myResources','LABEL_OVERALL_SCORE')+':' }"/>
			<controls:Rating value="{data.overallScoreAverage}"
							 liveRollOver="false"/>
		</s:HGroup>





	</s:VGroup>

	<fx:Script>
		<![CDATA[
			import model.DataModel;

			import mx.formatters.NumberBaseRoundType;
			import mx.formatters.NumberFormatter;

			import view.common.LocaleFlagResource;

			import vo.EvaluationVO;

			private var _data:Object;
			private var _creationComplete:Boolean=false;

			public function completeHandler():void
			{
				_data=data;
				_creationComplete=true;

			}

			public function getLevelCorrespondence(avgDifficulty:Number):String
			{
				var numFormat:NumberFormatter=new NumberFormatter();
				numFormat.precision=0;
				numFormat.rounding=NumberBaseRoundType.NEAREST;
				var roundedAvgDifficulty:int=int(numFormat.format(avgDifficulty));
				switch (roundedAvgDifficulty)
				{
					case 1:
						return 'A1';
						break;
					case 2:
						return 'A2';
						break;
					case 3:
						return 'B1.1';
						break;
					case 4:
						return 'B1.2';
						break;
					case 5:
						return 'B2.1';
						break;
					case 6:
						return 'B2.2';
						break;
					case 7:
						return 'C1';
						break;
					default:
						return '';
						break;
				}
			}

			public function getFlagSource(temp:EvaluationVO):String
			{
				return LocaleFlagResource.getFlagResource(temp.exerciseLanguage);
			}

			public function getExerciseImageSource(temp:EvaluationVO):String
			{
				var url:String='';
				if (temp.exerciseSource == "Red5")
					url=DataModel.getInstance().thumbURL + "/" + temp.exerciseThumbnailUri;
				else
					url=temp.exerciseThumbnailUri;
				return url;
			}

			public function getResponseImageSource(temp:EvaluationVO):String
			{
				var url:String='';
				if (temp.responseSource == "Red5")
					url=DataModel.getInstance().thumbURL + "/" + temp.responseThumbnailUri;
				else
					url=temp.responseThumbnailUri;
				return url;
			}
		]]>
	</fx:Script>

</s:MXDataGridItemRenderer>
