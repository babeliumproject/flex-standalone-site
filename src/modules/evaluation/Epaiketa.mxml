<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns:ns1="modules.evaluation.*"
		 creationComplete="completeHandler()"
		 xmlns:ns2="modules.autoevaluation.*"
		 paddingBottom="8"
		 fontFamily="Arial"
		 fontSize="12">
	
	
	
	<mx:Script>
		<![CDATA[
			import control.BabeliaBrowserManager;
			
			import events.*;
			
			import model.DataModel;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.IndexChangedEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ArrayUtil;
			
			import view.common.TimeFormatter;
			
			import vo.CreditHistoryVO;
			import vo.Epai;
			import vo.EvaluationVO;
			
			
			private var ep:Epai=new Epai;
			private var ev:EvaluationVO;
			
			private var _exerciseId:int;
			private var _exerciseName:String;
			
			private var _responseId:int;
			private var _responseName:String;
			private var _responseCharacterName:String="";
			
			private var _userId:int;
			
			
			
			
			
			
			private var biakBatera:Boolean=false;
			
			
			private var oraingoTab:String="hasiera";
			
			private var _videoCommentName:String;
			
			private var niriEp:Boolean=false;
			private var nikEp:Boolean=false;
			
			
			private var rating:String;
			
			
			
			[Bindable]
			private var assessmentDetailList:ArrayCollection;
			[Bindable]
			private var waitingForAssessmentList:ArrayCollection;
			[Bindable]
			private var assessedToCurrentUserList:ArrayCollection;
			[Bindable]
			private var assessedByCurrentUserList:ArrayCollection;
			
			
			
			private var kont:int=new int;
			
			private var timeFormatter:TimeFormatter=new TimeFormatter();
			
			private var userLoggedIn:Boolean=false;
			
			
			private function set onUserAuthenticated(value:Boolean):void
			{
				if (DataModel.getInstance().isLoggedIn == true)
				{
					userLoggedIn=true;
					_userId=DataModel.getInstance().loggedUser.id;
					epaiketaDat.baloratuGabekoak.send(_userId);
					epaiketaDat.norberariEpaitutakoak.send(_userId);
					epaiketaDat.nikEpaitutakoak.send(_userId);
				}
			}
			
			private function set onUserDeauthenticated(value:Boolean):void
			{
				if (DataModel.getInstance().isLoggedIn == false)
				{
					userLoggedIn=false;
					ratingBox.visible=false;
					epaitutakoDetail.visible=false;
					
					responsePlayer.seek_denb.visible=false;
					responsePlayer.botoiak.enabled=false;
					
					exercisePlayer.visible=false;
					responsePlayer.visible=false;
					selectEvaluationMessage.visible=true;
					watchSimultaneouslyBox.visible=false;
					
					oraingoTab="hasiera";
					
					assessmentDetailList=new ArrayCollection();
					tn2.visible=false;
					evaluationOptionsViewStack.selectedIndex=0;
					
				}
			}
			
			private function set onTabChange(value:Boolean):void
			{
				
				ratingBox.visible=false;
				epaitutakoDetail.visible=false;
				
				responsePlayer.seek_denb.visible=false;
				responsePlayer.botoiak.enabled=false;
				
				exercisePlayer.visible=false;
				responsePlayer.visible=false;
				selectEvaluationMessage.visible=true;
				watchSimultaneouslyBox.visible=false;
				
				oraingoTab="hasiera";
				
				waitingAssessmentDataGrid.selectedItem=null;
				assessedByCurrentUserDataGrid.selectedItem=null;
				assessedToCurrentUserDataGrid.selectedItem=null;
				
			}
			
			public function completeHandler():void
			{
				timeFormatter.outputMilliseconds=false;
				
				//Grab tab data
				if (DataModel.getInstance().isLoggedIn)
				{
					_userId=DataModel.getInstance().loggedUser.id;
					epaiketaDat.baloratuGabekoak.send(_userId);
					epaiketaDat.norberariEpaitutakoak.send(_userId);
					epaiketaDat.nikEpaitutakoak.send(_userId);
				}
				
				exercisePlayer.setup();
				responsePlayer.seek_denb.visible=false;
				responsePlayer.botoiak.enabled=false;
			}
			
			//Epaiketari dagokion "bidali" botoia sakatzean exekutatuko den funtzioa
			private function sendAssessmentClickHandler():void
			{
				if ((ratingRadioGroup.selectedValue) && (commentsTextArea.text != ""))
				{
					
					rating=ratingRadioGroup.selectedValue.toString();
					
					//if honek ez du funtzionatzen.. beraz Epaitu.php fitxategian eginda
					if (ratingRadioGroup.selectedValue.toString() == "bat")
					{
						rating="1";
					}
					else if (ratingRadioGroup.selectedValue.toString() == "bi")
					{
						rating="2";
					}
					else if (ratingRadioGroup.selectedValue.toString() == "hiru")
					{
						rating="3";
					}
					else if (ratingRadioGroup.selectedValue.toString() == "lau")
					{
						rating="4";
					}
					else if (ratingRadioGroup.selectedValue.toString() == "bost")
					{
						rating="5";
					}
					
					
					//bideo iruzkina gehituz
					if (videoCommentCheckBox.selected)
					{
						epaiketaDat.insertVideoEpaiketa.send(_responseId, _userId, rating, commentsTextArea.text.toString(), _videoCommentName);
					}
						//bideo iruzkinik gabe
					else
					{
						epaiketaDat.insertEpaiketa.send(_responseId, _userId, rating, commentsTextArea.text.toString());
					}
					reset();
					Alert.show(resourceManager.getString('myResources', 'YOURASSESMENTHASBEENSUCCESSFULYSAVED'));
				}
				else
				{
					Alert.show(resourceManager.getString('myResources', 'YOUMUSTSPECIFYASCORE'));
				}
			}
			
			private function evaluationAddedHandler(event:ResultEvent):void
			{
				var creditHistory:CreditHistoryVO=new CreditHistoryVO();
				creditHistory.videoExerciseId=_exerciseId;
				creditHistory.videoResponseId=int(_responseId);
				DataModel.getInstance().historicData=creditHistory;
				new CreditEvent(CreditEvent.ADD_CREDITS_FOR_EVALUATING, DataModel.getInstance().loggedUser.id).dispatch();
				
				//Data inserted on evaluation successfully.
				epaiketaDat.updateGrabaketa.send(_responseId);
				
				
				ratingBox.setVisible(false);
			}
			
			private function ratingAmountUpdatedHandler(event:ResultEvent):void
			{
				//We updated the rating amount from this response now we want to update the datagrid
				epaiketaDat.baloratuGabekoak.send(_userId);
				//We want to see our recent evaluation on the tab Responses I assessed
				epaiketaDat.nikEpaitutakoak.send(_userId);
			}
			
			//Epaiketari dagokion "reset" botoia sakatzean exekutatuko den funtzioa
			private function reset():void
			{
				ratingRadioGroup.selection=null;
				commentsTextArea.text="";
			}
			
			private function viewGraphicClickHandler():void
			{
				var grafikoa:Grafikoak=Grafikoak(PopUpManager.createPopUp(this, Grafikoak, true));
				grafikoa.datuakBidali(_responseId);
				PopUpManager.centerPopUp(grafikoa);
			}
			
			private function addVideoComment():void
			{
				var videoCommentPopUp:BideoGrabaketa=BideoGrabaketa(PopUpManager.createPopUp(this, BideoGrabaketa, true));
				
				videoCommentPopUp.addEventListener(AddVideoEvent.CHANGE_OPTION, bideoaGehituta);
				PopUpManager.centerPopUp(videoCommentPopUp);
				
			}
			
			private function bideoaGehituta(event:AddVideoEvent):void
			{
				addVideoCommentButton.visible=false;
				izenb.visible=true;
				videoCommentCheckBox.visible=true;
				videoCommentCheckBox.label=event.bideoIzena.toString();
				_videoCommentName=event.bideoIzena.toString();
			}
			
			
			// *****************************************************
			// **     Bideoak batera erreproduzitzeko kontrolak   **
			private function playBatera():void
			{
				exercisePlayer.playVid();
				responsePlayer.playVid();
				responsePlayer.muteatu();
				biakBatera=true;
			}
			
			private function pauseBatera():void
			{
				exercisePlayer.pauseVid();
				responsePlayer.pauseVid();
				biakBatera=true;
			}
			
			private function stopBatera():void
			{
				exercisePlayer.stopVid();
				responsePlayer.stopVid();
				responsePlayer.bolumenaAktibatu();
				exercisePlayer.bolumenaAktibatu();
				biakBatera=true;
			}
			
			//*******************************************************
			
			
			//bideoaren egoera aldaketak
			private function onMyCustomEvent(event:Event):void
			{
				//mx.controls.Alert.show("aa");
				kont++;
				trace("event: " + kont.toString());
				
			}
			
			
			private function grabaketaAmaituta(event:Event):void
			{
				if (oraingoTab == "epaituGabe")
				{
					responsePlayer.seek_denb.visible=true;
					responsePlayer.botoiak.enabled=true;
					sendAssessmentButton.enabled=true;
					exercisePlayer.bolumenaAktibatu();
					responsePlayer.bolumenaAktibatu();
				}
			}
			
			private function botoiaSakatuDu(event:Event):void
			{
				//mx.controls.Alert.show("botoia!");
				biakBatera=false;
			}
			
			
			//AMFPhp
			
			private function faultHandler(fault:FaultEvent):void
			{
				Alert.show(fault.fault.faultString + "\n" + fault.fault.faultDetail, fault.fault.faultCode.toString());
			}
			
			private function resultHandlerNiriEpaituta(event:ResultEvent):void
			{
				var result:ArrayCollection=new ArrayCollection(ArrayUtil.toArray(event.result));
				if (assessmentDetailDataGrid)
					assessmentDetailDataGrid.rowCount=result.length;
				assessmentDetailList=result;
			}
			
			private function resultHandler(event:ResultEvent):void
			{
				trace(event.result);
			}
			
			private function waitingAssessmentRetrieved(event:ResultEvent):void
			{
				var result:ArrayCollection=new ArrayCollection(ArrayUtil.toArray(event.result));
				if (waitingAssessmentDataGrid)
					waitingAssessmentDataGrid.rowCount=result.length;
				waitingForAssessmentList=result;
				allDataReceived();
			}
			
			private function norberariEpaitutakoakLortu(event:ResultEvent):void
			{
				var result:ArrayCollection=new ArrayCollection(ArrayUtil.toArray(event.result));
				if (assessedToCurrentUserDataGrid)
					assessedToCurrentUserDataGrid.rowCount=result.length;
				assessedToCurrentUserList=result;
				allDataReceived();
			}
			
			private function nikEpaitutakoakLortu(event:ResultEvent):void
			{
				var result:ArrayCollection=new ArrayCollection(ArrayUtil.toArray(event.result));
				if (assessedByCurrentUserDataGrid)
					assessedByCurrentUserDataGrid.rowCount=result.length;
				assessedByCurrentUserList=result;
				allDataReceived();
			}
			
			private function allDataReceived():void
			{
				if (waitingForAssessmentList != null && assessedByCurrentUserList != null && assessedByCurrentUserList != null)
				{
					onURLChange="Data";
				}
			}
			
			//Datagrid-aren balioak aldatzean egin beharrekoa
			
			private function waitingAssessmentChangeHandler(event:Event):void
			{
				if (oraingoTab != "epaituGabe")
				{
					frogatu("epaituGabe");
					if (tn2)
						tn2.visible=false;
					responsePlayer.botoiak.enabled=false;
					if (niriEp)
						assessedToCurrentUserDataGrid.selectedItem=null;
					if (nikEp)
						assessedByCurrentUserDataGrid.selectedItem=null;
					oraingoTab="epaituGabe";
				}
				
				if (DataModel.getInstance().isLoggedIn)
				{
					ratingBox.visible=true;
				}
				ep=Epai(DataGrid(event.target).selectedItem);
				_exerciseId=ep.exerciseId;
				exercisePlayer.setBideoIzena(ep.Kodea, ep.exerciseId);
				exercisePlayer.ezabatuFletxak();
				exercisePlayer.setRolAukeratua(ep.AukeratutakoPertsonaia);
				
				
				responsePlayer.setBideoIzena(ep.Id, 1);
				responsePlayer.ezabatuFletxak();
				responsePlayer.setRolAukeratua(ep.AukeratutakoPertsonaia);
				
				_responseCharacterName=ep.AukeratutakoPertsonaia;
				
				responsePlayer.seek_denb.visible=false;
				sendAssessmentButton.enabled=false;
				
				addVideoCommentButton.visible=true;
				izenb.visible=false;
				videoCommentCheckBox.visible=false;
				
				
				_exerciseName=ep.Kodea;
				_responseName=ep.Id;
				_responseId=parseInt(ep.response_id);
				
				var urlResponseName:String=_responseName.replace("audio/", "");
				
				BabeliaBrowserManager.getInstance().updateURL(BabeliaBrowserManager.index2fragment(ViewChangeEvent.VIEWSTACK_EVALUATION_MODULE_INDEX), BabeliaBrowserManager.EVALUATE, urlResponseName);
				
			}
			
			private function assessedToCurrentUserChangeHandler(event:Event):void
			{
				if (!niriEp)
					niriEp=true;
				if (oraingoTab != "niriEpaituak")
				{
					frogatu("niriEpaituak");
					oraingoTab="niriEpaituak";
					ratingBox.visible=false;
					tn2.visible=true;
					waitingAssessmentDataGrid.selectedItem=null;
					waitingAssessmentDataGrid.nullItemRenderer;
					if (nikEp)
						assessedByCurrentUserDataGrid.selectedItem=null;
					
					responsePlayer.seek_denb.visible=true;
					responsePlayer.botoiak.enabled=true;
				}
				;
				ev=EvaluationVO(DataGrid(event.target).selectedItem);
				
				exercisePlayer.setBideoIzena(ev.exerciseName, 1);
				exercisePlayer.ezabatuFletxak();
				exercisePlayer.setRolAukeratua(ev.responseCharacterName);
				
				responsePlayer.setBideoIzena(ev.responseFileIdentifier, 1);
				responsePlayer.ezabatuFletxak();
				responsePlayer.setRolAukeratua(ev.responseCharacterName);
				averageRating.text=resourceManager.getString('myResources', 'AVG') + ": " + ev.evaluationAverage;
				
				_responseCharacterName=ev.responseCharacterName;
				
				addVideoCommentButton.visible=true;
				izenb.visible=false;
				videoCommentCheckBox.visible=false;
				
				
				_exerciseName=ev.exerciseName;
				_responseName=ev.responseFileIdentifier;
				
				_responseId=ev.responseId;
				
				epaiketaDat.epaitutakoGrabaketa.send(_responseId);
				
				//Get the autoevaluation info if available
				autoevalPanel.setResponseID(_responseId);
				
				var urlResponseName:String=_responseName.replace("audio/", "");
				
				BabeliaBrowserManager.getInstance().updateURL(BabeliaBrowserManager.index2fragment(ViewChangeEvent.VIEWSTACK_EVALUATION_MODULE_INDEX), BabeliaBrowserManager.REVISE, urlResponseName);
			}
			
			//ea hasierako egoeran dagoen kontrolatzen du
			private function frogatu(egoeraBerria:String):void
			{
				if (oraingoTab == "hasiera")
				{
					exercisePlayer.visible=true;
					responsePlayer.visible=true;
					watchSimultaneouslyBox.visible=true;
					selectEvaluationMessage.visible=false;
					oraingoTab=egoeraBerria;
				}
			}
			
			private function assessedByCurrentUserChangeHandler(event:Event):void
			{
				if (!nikEp)
					nikEp=true;
				
				if (oraingoTab != "nikEpaituak")
				{
					frogatu("nikEpaituak");
					ratingBox.visible=false;
					tn2.visible=false;
					waitingAssessmentDataGrid.selectedItem=null;
					if (niriEp)
						assessedToCurrentUserDataGrid.selectedItem=null;
					
					oraingoTab="nikEpaituak";
					
					
					responsePlayer.seek_denb.visible=true;
					responsePlayer.botoiak.enabled=true;
				}
				
				ep=Epai(DataGrid(event.target).selectedItem);
				
				exercisePlayer.setBideoIzena(ep.Kodea, 1);
				exercisePlayer.ezabatuFletxak();
				exercisePlayer.setRolAukeratua(ep.AukeratutakoPertsonaia);
				
				responsePlayer.setBideoIzena(ep.Id, 1);
				responsePlayer.ezabatuFletxak();
				responsePlayer.setRolAukeratua(ep.AukeratutakoPertsonaia);
				
				_responseCharacterName=ep.AukeratutakoPertsonaia;
				
				addVideoCommentButton.visible=true;
				izenb.visible=false;
				videoCommentCheckBox.visible=false;
				
				
				_exerciseName=ep.Kodea;
				_responseName=ep.Id;
				
				var urlResponseName:String=_responseName.replace("audio/", "");
				
				BabeliaBrowserManager.getInstance().updateURL(BabeliaBrowserManager.index2fragment(ViewChangeEvent.VIEWSTACK_EVALUATION_MODULE_INDEX), BabeliaBrowserManager.VIEW, urlResponseName);
			}
			
			private function onAddCuepoint(event:AddCuepointEvent):void
			{
				if (biakBatera)
				{
					if (_responseCharacterName == event.izena)
					{
						responsePlayer.bolumenaAktibatu();
						exercisePlayer.muteatu();
					}
					else
					{
						exercisePlayer.bolumenaAktibatu();
						responsePlayer.muteatu();
					}
				}
			}
			
			private function assessmentDetailChangeHandler(event:Event):void
			{
				if (ep.BideoIruzkina)
				{
					ep=Epai(DataGrid(event.target).selectedItem);
					
					if (ep.BideoIruzkina.toString() != "")
					{
						var bideoIruzkin:bideoaIkusi=bideoaIkusi(PopUpManager.createPopUp(this, bideoaIkusi, true));
						PopUpManager.centerPopUp(bideoIruzkin);
						assessmentDetailDataGrid.selectedItem=null;
						
						bideoIruzkin.setBideoIzena(ep.BideoIruzkina.toString());
					}
				}
			}
			
			private function set showAutoevalTab(val:Boolean):void
			{
				if (tn2 != null)
				{
					//Show the autoevaluation tab if autoevaluation is available, else hide it
					tn2.getTabAt(1).visible=DataModel.getInstance().autoevaluationAvailable;
					tn2.getTabAt(1).enabled=DataModel.getInstance().autoevaluationAvailable;
					tn2.getTabAt(1).includeInLayout=DataModel.getInstance().autoevaluationAvailable;
					tn2.selectedIndex=0;
				}
				else
					DataModel.getInstance().autoevaluationAvailable=true;
			}
			
			private function durationLabelFunction(item:Object):String
			{
				return timeFormatter.format(item.Iraupena);
			}
			
			private function refreshTab(event:IndexChangedEvent):void
			{
				switch (event.newIndex)
				{
					case 0:
						waitingAssessmentDataGrid.rowCount=waitingForAssessmentList.length;
						break;
					case 1:
						assessedToCurrentUserDataGrid.rowCount=assessedToCurrentUserList.length;
						break;
					case 2:
						assessedByCurrentUserDataGrid.rowCount=assessedByCurrentUserList.length;
						break;
				}
			}
			
			private function set onURLChange(value:Object):void
			{
				var browser:BabeliaBrowserManager=BabeliaBrowserManager.getInstance();
				
				if (browser.moduleIndex != ViewChangeEvent.VIEWSTACK_EVALUATION_MODULE_INDEX)
					return;
				
				if (value == null)
					return;
				
				if (waitingForAssessmentList == null || assessedByCurrentUserList == null || assessedToCurrentUserList == null)
					return;
				
				switch (browser.actionFragment)
				{
					case BabeliaBrowserManager.EVALUATE:
						if (browser.targetFragment != '')
						{
							var tmpEvaluate:Epai;
							for each (var evEvaluate:Epai in waitingForAssessmentList)
							{
								var evaluateStripped:String=evEvaluate.Id.replace("audio/", "");
								
								if (evaluateStripped == browser.targetFragment)
								{
									tmpEvaluate=evEvaluate;
									break;
								}
							}
							if (tmpEvaluate)
							{
								//Go to the speficied tab and dispatch a change event
								evaluationOptionsViewStack.selectedChild=waitingAssessmentBox;
								waitingAssessmentDataGrid.selectedItem=tmpEvaluate;
								waitingAssessmentDataGrid.dispatchEvent(new ListEvent(ListEvent.CHANGE));
							}
							else
							{
								
								new ViewChangeEvent(ViewChangeEvent.VIEW_EVALUATION_MODULE).dispatch();
							}
						}
						break;
					
					case BabeliaBrowserManager.REVISE:
						if (browser.targetFragment != '')
						{
							evaluationOptionsViewStack.selectedChild=assessedToCurrentUserBox;
							var tmpRevise:EvaluationVO;
							for each (var evRevise:EvaluationVO in assessedToCurrentUserList)
							{
								var reviseStripped:String=evRevise.responseFileIdentifier.replace("audio/", "");
								
								if (reviseStripped == browser.targetFragment)
								{
									tmpRevise=evRevise;
									break;
								}
							}
							if (tmpRevise != null)
							{
								//Go to the speficied tab and dispatch a change event
								if (assessedToCurrentUserDataGrid)
								{
									assessedToCurrentUserDataGrid.selectedItem=tmpRevise;
									assessedToCurrentUserDataGrid.dispatchEvent(new ListEvent(ListEvent.CHANGE));
								}
							}
							else
							{
								new ViewChangeEvent(ViewChangeEvent.VIEW_HOME_MODULE).dispatch();
							}
						}
						break;
					
					case BabeliaBrowserManager.VIEW:
						
						if (browser.targetFragment != '')
						{
							var tmpView:Epai;
							for each (var evView:Epai in assessedByCurrentUserList)
							{
								var viewStripped:String=evView.Id.replace("audio/", "");
								if (viewStripped == browser.targetFragment)
								{
									tmpView=evView;
									break;
								}
							}
							if (tmpView != null)
							{
								//Go to the speficied tab and dispatch a change event
								evaluationOptionsViewStack.selectedChild=assessedByCurrentUserBox;
								assessedByCurrentUserDataGrid.selectedItem=tmpView;
								assessedByCurrentUserDataGrid.dispatchEvent(new ListEvent(ListEvent.CHANGE));
							}
							else
							{
								new ViewChangeEvent(ViewChangeEvent.VIEW_HOME_MODULE).dispatch();
							}
						}
						break;
					default:
						new ViewChangeEvent(ViewChangeEvent.VIEW_EVALUATION_MODULE).dispatch();
						break;
				}
			}
		]]>
	</mx:Script>
	
	<mx:Binding source="{DataModel.getInstance().autoevaluationAvailable}"
				destination="this.showAutoevalTab"/>
	<mx:Binding source="{DataModel.getInstance().isLoggedIn == true}"
				destination="onUserAuthenticated"/>
	<mx:Binding source="{DataModel.getInstance().isLoggedIn == false}"
				destination="onUserDeauthenticated"/>
	<mx:Binding source="{DataModel.getInstance().stopVideoFlag}"
				destination="onTabChange"/>
	
	<mx:Binding source="{BabeliaBrowserManager.getInstance().targetFragment}"
				destination="onURLChange"/>
	
	
	<!-- AMFPhp -->
	<mx:RemoteObject id="epaiketaDat"
					 destination="empService"
					 source="Epaitu"
					 fault="faultHandler(event)"
					 showBusyCursor="true">
		<mx:method name="epaitutakoGrabaketa"
				   result="resultHandlerNiriEpaituta(event)"/>
		<mx:method name="baloratuGabekoak"
				   result="waitingAssessmentRetrieved(event)"/>
		<mx:method name="updateGrabaketa"
				   result="ratingAmountUpdatedHandler(event)"/>
		<mx:method name="norberariEpaitutakoak"
				   result="norberariEpaitutakoakLortu(event)"/>
		<mx:method name="nikEpaitutakoak"
				   result="nikEpaitutakoakLortu(event)"/>
		<mx:method name="insertEpaiketa"
				   result="evaluationAddedHandler(event)"/>
		<mx:method name="insertVideoEpaiketa"
				   result="evaluationAddedHandler(event)"/>
	</mx:RemoteObject>
	
	
	<mx:VBox id="videoPlayersBox"
			 horizontalAlign="center"
			 height="100%"
			 width="100%">
		<mx:Label id="selectEvaluationMessage"
				  text="{resourceManager.getString('myResources', 'AUKERATUBIDEOA')}"/>
		
		<!-- Bi bideoak batera erreproduzitzeko beharrezko botoiak -->
		<mx:HBox id="watchSimultaneouslyBox"
				 dropShadowEnabled="true"
				 borderStyle="solid"
				 cornerRadius="5"
				 visible="false">
			<mx:Label text="{resourceManager.getString('myResources', 'BIAKBATERAIKUSI')}"/>
			<mx:LinkButton label="Play"
						   click="playBatera();"/>
			<mx:LinkButton label="Pause"
						   click="pauseBatera();"/>
			<mx:LinkButton label="Stop"
						   click="stopBatera()"/>
		</mx:HBox>
		<mx:HBox height="100%">
			<!-- Bideo objektuak -->
			<ns1:nireBideoa id="exercisePlayer"
							height="100%"
							width="100%"
							myCustomEvent="onMyCustomEvent(event);"
							botoiaSakatuta="botoiaSakatuDu(event)"
							cuePoint="onAddCuepoint( event );"
							visible="false">
			</ns1:nireBideoa>
			<ns1:nireBideoa id="responsePlayer"
							height="100%"
							width="100%"
							bukatuDa="grabaketaAmaituta(event)"
							visible="false">
			</ns1:nireBideoa>
		</mx:HBox>
	</mx:VBox>
	
	<mx:VBox width="100%"
			 height="100%"
			 paddingLeft="4"
			 paddingRight="4"
			 paddingBottom="4">
		<mx:HBox width="100%"
				 height="35"
				 horizontalAlign="center"
				 verticalAlign="middle"
				 cornerRadius="8"
				 backgroundColor="#DDDDDD"
				 borderStyle="solid"
				 horizontalGap="16">
			<mx:Button label="{resourceManager.getString('myResources','EPAITUGABEDAUDENAK')}"
					   cornerRadius="8"
					   click="evaluationOptionsViewStack.selectedChild=waitingAssessmentBox"/>
			<mx:Button label="{resourceManager.getString('myResources','NIRIPAITUTAKOAK')}"
					   cornerRadius="8"
					   click="evaluationOptionsViewStack.selectedChild=assessedToCurrentUserBox"/>
			<mx:Button label="{resourceManager.getString('myResources','NIKEPAITUTAKOAK')}"
					   cornerRadius="8"
					   click="evaluationOptionsViewStack.selectedChild=assessedByCurrentUserBox"/>
		</mx:HBox>
		
		<mx:ViewStack id="evaluationOptionsViewStack"
					  width="100%"
					  height="100%">
			
			<!-- Epaitu gabe dauden bideoak aukeratzeko zerrenda erakutsiko du -->
			<mx:VBox id="waitingAssessmentBox"
					 horizontalAlign="center">
				<mx:DataGrid id="waitingAssessmentDataGrid"
							 dataProvider="{waitingForAssessmentList}"
							 width="100%"
							 horizontalScrollPolicy="off"
							 verticalScrollPolicy="off"
							 verticalAlign="middle"
							 change="waitingAssessmentChangeHandler(event)">
					<mx:columns>
						<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'JATORRIZKOA')}"
										   dataField="Kodea"
										   width="{120*0.8}">
							<mx:itemRenderer>
								<mx:Component>
									<mx:VBox>
										<mx:Image id="albumImage"
												  height="{90*0.8}"
												  width="{120*0.8}"
												  source="resources/images/thumbs/{data.Kodea}.jpg"/>
									</mx:VBox>
								</mx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'OWNER')}"
										   dataField="Jabea"/>
						<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'GRABADOR')}"
										   dataField="Id"
										   visible="false"/>
						<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'IRAUPENA')}"
										   dataField="Iraupena"/>
						<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'BALORAZIOKOP')}"
										   dataField="Baloraturik"/>
						<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'SELECTEDCHAR')}"
										   dataField="AukeratutakoPertsonaia"
										   visible="false"/>
						<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'DATE')}"
										   dataField="Data"/>
					</mx:columns>
				</mx:DataGrid>
				
				<!-- Epaitu gabeko bideoak baloratzeko kaxa -->
				<mx:HBox paddingLeft="10"
						 paddingRight="10"
						 paddingBottom="10"
						 paddingTop="10"
						 width="100%">
					<mx:VBox id="ratingBox"
							 width="100%"
							 backgroundColor="#000000"
							 backgroundAlpha="0.13"
							 horizontalAlign="center"
							 verticalAlign="middle"
							 paddingRight="4"
							 paddingLeft="4"
							 paddingTop="4"
							 paddingBottom="4"
							 visible="false"
							 borderStyle="solid">
						<mx:RadioButtonGroup id="ratingRadioGroup"/>
						<mx:Label text="{resourceManager.getString('myResources','MESSAGE_RATE_THE_USERS_RESPONSE')}"
								  fontWeight="bold"/>
						<mx:HRule width="100%"/>
						<mx:HBox>
							<mx:RadioButton id="bat"
											group="{ratingRadioGroup}"
											label="1"/>
							<mx:RadioButton id="bi"
											group="{ratingRadioGroup}"
											label="2"/>
							<mx:RadioButton id="hiru"
											group="{ratingRadioGroup}"
											label="3"/>
							<mx:RadioButton id="lau"
											group="{ratingRadioGroup}"
											label="4"/>
							<mx:RadioButton id="bost"
											group="{ratingRadioGroup}"
											label="5"/>
						</mx:HBox>
						
						<mx:Button label="{resourceManager.getString('myResources', 'ADDVIDEO')}"
								   click="addVideoComment()"
								   id="addVideoCommentButton"/>
						<mx:Label id="izenb"
								  text="{resourceManager.getString('myResources','MESSAGE_ADD_VIDEO_EVALUATION')}"
								  visible="false"/>
						<mx:CheckBox id="videoCommentCheckBox"
									 visible="false"/>
						
						<mx:TextArea width="100%"
									 height="82"
									 id="commentsTextArea"/>
						<mx:HBox>
							<mx:Button label="{resourceManager.getString('myResources', 'BIDALI')}"
									   click="sendAssessmentClickHandler()"
									   id="sendAssessmentButton"
									   enabled="false"/>
							<mx:Button label="{resourceManager.getString('myResources', 'RESET')}"
									   click="reset()"/>
						</mx:HBox>
					</mx:VBox>
				</mx:HBox>
			</mx:VBox>
			
			
			
			
			<!-- Niri epaitutako bideoen zerrenda erakusten du -->
			<mx:VBox id="assessedToCurrentUserBox">
				<mx:DataGrid width="100%"
							 height="100%"
							 id="assessedToCurrentUserDataGrid"
							 horizontalScrollPolicy="off"
							 verticalScrollPolicy="off"
							 dataProvider="{assessedToCurrentUserList}"
							 change="assessedToCurrentUserChangeHandler(event)">
					<mx:columns>
						<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'JATORRIZKOA')}"
										   dataField="exerciseThumbnailUri"
										   width="{120*0.8}">
							<mx:itemRenderer>
								<mx:Component>
									<mx:VBox>
										<mx:Image id="albumImageNorb"
												  height="{90*0.8}"
												  width="{120*0.8}"
												  source="resources/images/thumbs/{data.exerciseThumbnailUri}"/>
									</mx:VBox>
								</mx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'IRAUPENA')}"
										   dataField="exerciseDuration"/>
						<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'BALORAZIOKOP')}"
										   dataField="responseRatingAmount"/>
						<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'AVG')}"
										   dataField="evaluationAverage"/>
						<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'SELECTEDCHAR')}"
										   dataField="responseCharacterName"/>
					</mx:columns>
				</mx:DataGrid>
				<mx:Spacer height="30"/>
				<!-- Niri epaitutako bideoen xehetasunak ematen dituen panela -->
				<mx:HBox width="100%"
						 height="100%">
					<mx:TabNavigator id="tn2"
									 visible="false"
									 creationPolicy="all"
									 width="100%"
									 paddingLeft="8"
									 paddingRight="8"
									 paddingTop="8"
									 paddingBottom="8">
						<mx:VBox id="epaitutakoDetail"
								 label="Human Evaluation">
							<mx:HBox>
								<mx:Label id="averageRating"/>
								<mx:Button id="viewGraphicButton"
										   label="{resourceManager.getString('myResources', 'DISPLAYGRAPH')}"
										   click="viewGraphicClickHandler()"/>
								<!-- <mx:Image source="images/graf_icon.png" width="20" height="20" click="grafikoaIkusi()"/> -->
							</mx:HBox>
							
							<mx:DataGrid id="assessmentDetailDataGrid"
										 dataProvider="{assessmentDetailList}"
										 change="assessmentDetailChangeHandler(event)"
										 width="100%">
								<mx:columns>
									<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'JUZGE')}"
													   dataField="Epailea"/>
									<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'VALUATION')}"
													   dataField="Balorazioa"/>
									<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'DATE')}"
													   dataField="Data"/>
									<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'COMMENTS')}"
													   dataField="Iruzkinak"
													   width="160">
										<mx:itemRenderer>
											<mx:Component>
												<mx:VBox>
													<mx:TextArea id="textua"
																 backgroundColor="#ffffff"
																 height="100"
																 text="{data.Iruzkinak}"
																 editable="false"
																 width="160"/>
												</mx:VBox>
											</mx:Component>
										</mx:itemRenderer>
									</mx:DataGridColumn>
									<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'VIDEOCOMMENT')}"
													   dataField="BideoIruzkina"/>
								</mx:columns>
							</mx:DataGrid>
						</mx:VBox>
						<ns2:AutoevaluationPanel id="autoevalPanel">
						</ns2:AutoevaluationPanel>
					</mx:TabNavigator>
				</mx:HBox>
				
			</mx:VBox>
			
			
			<!-- Nik epaitu ditudan bideoen zerrenda erakusten du -->
			<mx:VBox label="{resourceManager.getString('myResources', 'NIKEPAITUTAKOAK')}"
					 id="assessedByCurrentUserBox">
				<mx:DataGrid width="100%"
							 id="assessedByCurrentUserDataGrid"
							 dataProvider="{assessedByCurrentUserList}"
							 change="assessedByCurrentUserChangeHandler(event)"
							 verticalScrollPolicy="off">
					<mx:columns>
						<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'JATORRIZKOA')}"
										   dataField="Kodea"
										   width="{120*0.8}">
							<mx:itemRenderer>
								<mx:Component>
									<mx:VBox>
										<mx:Image id="albumImageNorb"
												  height="{90*0.8}"
												  width="{120*0.8}"
												  source="resources/images/thumbs/{data.Kodea}.jpg"/>
									</mx:VBox>
								</mx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'GRABADOR')}"
										   dataField="Id"/>
						<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'IRAUPENA')}"
										   dataField="Iraupena"/>
						<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'BALORAZIOKOP')}"
										   dataField="Baloraturik"/>
						<mx:DataGridColumn headerText="{resourceManager.getString('myResources', 'SELECTEDCHAR')}"
										   dataField="AukeratutakoPertsonaia"
										   visible="true"/>
					</mx:columns>
				</mx:DataGrid>
			</mx:VBox>
		</mx:ViewStack>
	</mx:VBox>
	
	
</mx:HBox>
