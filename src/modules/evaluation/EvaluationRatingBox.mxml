<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml"
					xmlns:common="view.common.*"
					xmlns:rating="com.asfusion.controls.*"
					xmlns:evaluation="modules.evaluation.*"
					xmlns:videoUpload="modules.videoUpload.*"
					title="{resourceManager.getString('myResources','MESSAGE_RATE_THE_USERS_RESPONSE')}"
					paddingTop="4"
					includeInLayout="false"
					visible="false"
					creationComplete="onComplete(event)">

	<mx:Script>
		<![CDATA[
			import com.asfusion.controls.*;
			
			import events.EvaluationEvent;
			
			import model.DataModel;
			
			import modules.videoPlayer.events.babelia.VideoPlayerBabeliaEvent;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.utils.ArrayUtil;
			import mx.utils.ObjectProxy;
			
			import view.common.CustomAlert;
			
			import vo.EvaluationVO;

			private var _responseDataAvailable:Boolean=false;

			private var _responseId:uint;
			
			//These are used for sending notification emails
			private var _userName:String;
			private var _responseName:String;
			private var _responseAddingDate:String;
			private var _responseUserName:String;
			private var _exerciseTitle:String;

			private function onComplete(event:FlexEvent):void
			{

			}
			
			public function onResponseFinished(event:Event):void
			{
				sendEvaluationButton.enabled=true;
			}

			public function responseData(responseId:uint, userName:String, responseName:String, responseAddingDate:String, responseUserName:String, exerciseTitle:String):void
			{
				_responseId=responseId;
				
				_userName=userName;
				_responseName=responseName;
				_responseAddingDate=responseAddingDate;
				_responseUserName=responseUserName;
				_exerciseTitle=exerciseTitle;	

				_responseDataAvailable=true;
			}

			public function sendEvaluationButtonClickHandler(event:MouseEvent):void
			{

				if (_responseDataAvailable)
				{
					if (userIntonationScore.ratingComponent.value > 0 && userFluencyScore.ratingComponent.value > 0 && userRhythmScore.ratingComponent.value > 0 && userSpontaneityScore.ratingComponent.value > 0 && userOverallScore.ratingComponent.value > 0)
					{
						if(includeTextCheck.selected && textComment.text==''){
							CustomAlert.info(resourceManager.getString('myResources','ERROR_SELECTED_TEXT_COMMENT_NO_FILL'));
							return;
						}
						if(includeVideoCheck.selected && !videoComment.recordingFileName){
							CustomAlert.info(resourceManager.getString('myResources','ERROR_SELECTED_VIDEO_COMMENT_NO_FILL'));
							return;
						}
						var evaluation:EvaluationVO=new EvaluationVO();

						evaluation.intonationScore=userIntonationScore.ratingComponent.value;
						evaluation.fluencyScore=userFluencyScore.ratingComponent.value;
						evaluation.rhythmScore=userRhythmScore.ratingComponent.value;
						evaluation.spontaneityScore=userSpontaneityScore.ratingComponent.value;

						evaluation.overallScore=userOverallScore.ratingComponent.value;
						evaluation.comment=textComment.text;

						evaluation.responseId=_responseId;
		
						evaluation.evaluationVideoFileIdentifier=videoComment.recordingFileName;
						
						//This data is used to send an email notification to the user that received the evaluation
						evaluation.userName=_userName;
						evaluation.responseFileIdentifier=_responseName;
						evaluation.responseAddingDate=_responseAddingDate;
						evaluation.responseUserName=_responseUserName;
						evaluation.exerciseTitle=_exerciseTitle;	
						

						//If the user added a video comment
						if (includeVideoCheck.selected)
							new EvaluationEvent(EvaluationEvent.ADD_VIDEO_ASSESSMENT, evaluation).dispatch();
						else
							new EvaluationEvent(EvaluationEvent.ADD_ASSESSMENT, evaluation).dispatch();
						resetEvaluationButtonClickHandler(null);
					}
					else
					{
						CustomAlert.info(resourceManager.getString('myResources', 'ERROR_FILL_COMPULSORY_DATA'));
					}
				}
				else
				{
					CustomAlert.error(resourceManager.getString('myResources','ERROR_EVALUATION_DATA_NOT_SPECIFIED'));
				}


			}

			public function resetEvaluationButtonClickHandler(event:MouseEvent):void
			{
				userIntonationScore.ratingComponent.value=0;
				userFluencyScore.ratingComponent.value=0;
				userRhythmScore.ratingComponent.value=0;
				userSpontaneityScore.ratingComponent.value=0;
				userOverallScore.ratingComponent.value=0;
				
				textComment.text='';
				if(videoComment)
					videoComment.resetComponent();
				
				includeTextCheck.selected = false;
				includeVideoCheck.selected = false;
				
				optionalEvaluationDataBox.visible=false;
				optionalEvaluationDataBox.getTabAt(0).visible=false;
				optionalEvaluationDataBox.getTabAt(1).visible=false;
				optionalEvaluationDataBox.selectedIndex=0;
				optionalEvaluationDataBox.includeInLayout=false;
				
				sendEvaluationButton.enabled = true;
			}

			protected function includeTextVideoCommentClickHandler(event:MouseEvent):void
			{
				if (includeTextCheck.selected && includeVideoCheck.selected)
				{
					optionalEvaluationDataBox.visible=true;
					optionalEvaluationDataBox.getTabAt(0).visible=true;
					optionalEvaluationDataBox.getTabAt(1).visible=true;
					optionalEvaluationDataBox.selectedIndex=0;
					optionalEvaluationDataBox.includeInLayout=true;
				}
				else if (includeTextCheck.selected && !includeVideoCheck.selected)
				{
					optionalEvaluationDataBox.visible=true;
					optionalEvaluationDataBox.getTabAt(0).visible=true;
					optionalEvaluationDataBox.getTabAt(1).visible=false;
					optionalEvaluationDataBox.selectedIndex=0;
					optionalEvaluationDataBox.includeInLayout=true;
				}
				else if (!includeTextCheck.selected && includeVideoCheck.selected)
				{
					optionalEvaluationDataBox.visible=true;
					optionalEvaluationDataBox.getTabAt(0).visible=false;
					optionalEvaluationDataBox.getTabAt(1).visible=true;
					optionalEvaluationDataBox.selectedIndex=1;
					optionalEvaluationDataBox.includeInLayout=true;
				}
				else
				{
					optionalEvaluationDataBox.visible=false;
					optionalEvaluationDataBox.getTabAt(0).visible=false;
					optionalEvaluationDataBox.getTabAt(1).visible=false;
					optionalEvaluationDataBox.selectedIndex=0;
					optionalEvaluationDataBox.includeInLayout=false;
				}
			}
		]]>
	</mx:Script>

	<mx:VBox id="ratingContainer"
			 width="100%"
			 height="100%">

		<mx:Label text="{resourceManager.getString('myResources','MESSAGE_COMPULSORY_EVALUATION_DATA') + ':'}"/>

		<mx:HBox width="100%">
			<mx:Spacer width="10"/>
			<mx:VBox width="100%">
				<evaluation:ScoreParameterBox id="userIntonationScore"
											  parameter="MESSAGE_RATE_USER_INTONATION"/>
				<evaluation:ScoreParameterBox id="userFluencyScore"
											  parameter="MESSAGE_RATE_USER_FLUENCY"/>
				<evaluation:ScoreParameterBox id="userRhythmScore"
											  parameter="MESSAGE_RATE_USER_RHYTHM"/>
				<evaluation:ScoreParameterBox id="userSpontaneityScore"
											  parameter="MESSAGE_RATE_USER_SPONTANEITY"/>
				<evaluation:ScoreParameterBox id="userOverallScore"
											  parameter="MESSAGE_RATE_USER_OVERALL_SCORE"/>
			</mx:VBox>
		</mx:HBox>
		<mx:Spacer height="6"/>

		<!-- Comment section -->
		<mx:Label text="{resourceManager.getString('myResources','MESSAGE_OPTIONAL_EVALUATION_DATA') + ':'}"/>
		<mx:CheckBox id="includeTextCheck"
					 label="{resourceManager.getString('myResources','LABEL_INCLUDE_TEXT_COMMENT')}"
					 click="includeTextVideoCommentClickHandler(event)"/>
		<mx:CheckBox id="includeVideoCheck"
					 label="{resourceManager.getString('myResources','LABEL_INCLUDE_VIDEO_COMMENT')}"
					 click="includeTextVideoCommentClickHandler(event)"/>

		<mx:TabNavigator id="optionalEvaluationDataBox"
						 visible="false"
						 width="100%"
						 includeInLayout="false"
						 resizeToContent="true">
			<mx:VBox id="textCommentBox"
					 label="{resourceManager.getString('myResources','LABEL_TEXT_COMMENT')}"
					 width="100%">
				<mx:TextArea id="textComment"
							 width="100%"
							 height="100"/>
			</mx:VBox>

			<mx:VBox id="videoCommentBox"
					 label="{resourceManager.getString('myResources','LABEL_VIDEO_COMMENT')}"
					 width="100%">
				<videoUpload:TempVideoRecording id="videoComment"
												streamsFolder="{DataModel.getInstance().evaluationStreamsFolder}"
												filePrefix="comment"
												minimumVideoDuration="{DataModel.getInstance().minVideoEvalDuration}"/>
			</mx:VBox>

		</mx:TabNavigator>

		<mx:HBox id="controlButtons"
				 width="100%"
				 horizontalAlign="center"
				 verticalAlign="middle">
			<mx:Button id="sendEvaluationButton"
					   label="{resourceManager.getString('myResources','LABEL_SEND_EVALUATION')}"
					   click="sendEvaluationButtonClickHandler(event)"
					   />
			<mx:Button id="resetEvaluationButton"
					   label="{resourceManager.getString('myResources','LABEL_RESET_EVALUATION')}"
					   click="resetEvaluationButtonClickHandler(event)"/>
		</mx:HBox>


	</mx:VBox>

</mx:Panel>
