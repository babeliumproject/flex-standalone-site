<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
		 >

	<fx:Script>
		<![CDATA[
			import model.DataModel;
			
			import modules.search.VideoPaginator;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Button;
			import mx.events.ListEvent;


			[Bindable]
			private var _currentPage:int=1;

			[Bindable]
			private var _dataProvider:ArrayCollection;
			
			public function set currentPaginationPage(value:uint):void{
				_currentPage = value;
				createPagination();
			}

			public function set dataProvider(assessedToCurrentUserData:ArrayCollection):void
			{
				_dataProvider=assessedToCurrentUserData;
				if (_dataProvider.length > 0)
				{
					assessedToCurrentUserListTable.includeInLayout=true;
					assessedToCurrentUserListTable.visible=true;
					createPagination();
				}
				else
				{
					assessedToCurrentUserListTable.includeInLayout=false;
					assessedToCurrentUserListTable.visible=false;
				}
			}

			public function set changeListener(changeFunction:Function):void
			{
				assessedToCurrentUserListTable.addEventListener(ListEvent.CHANGE, changeFunction);
			}

			public function createPagination():void
			{
				VideoPaginator.createPaginationMenu(_dataProvider.length, DataModel.getInstance().pageSize, _currentPage, DataModel.getInstance().numberOfPagesNav, paginationBox, navigateToPage);
				refreshDataProvider();
			}

			private function navigateToPage(event:MouseEvent):void
			{
				//Go to the page
				_currentPage=int((event.target as Button).id);
				//Refresh the pagination controls
				createPagination();
			}

			public function refreshDataProvider():void
			{
				var current:int=_currentPage - 1;
				var pageSize:int=DataModel.getInstance().pageSize;
				var dataTemp:ArrayCollection=new ArrayCollection(_dataProvider.source.slice((current * pageSize), (current * pageSize) + pageSize));
				assessedToCurrentUserListTable.rowCount=dataTemp.length;
				assessedToCurrentUserListTable.dataProvider=dataTemp;
			}
		]]>
	</fx:Script>


	<mx:DataGrid id="assessedToCurrentUserListTable"
				 width="100%"
				 editable="false"
				 
				 sortableColumns="false"
				 draggableColumns="false"
				 headerHeight="0"
				 dataProvider="{_dataProvider}">
		<mx:columns>
			<mx:DataGridColumn itemRenderer="modules.evaluation.AssessedToCurrentUserListItem"/>
		</mx:columns>
	</mx:DataGrid>

	<s:HGroup id="paginationBox"
			 width="100%"
			 horizontalAlign="left"
			 gap="2"/>

</s:VGroup>
