<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:view="modules.exercise.view.*"
		  implements="modules.IModuleInterface"
		  width="100%">
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>

	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import control.BabeliaBrowserManager;

			import flash.utils.getDefinitionByName;
			import flash.utils.getQualifiedClassName;

			import model.DataModel;

			import modules.exercise.event.ExerciseEvent;
			import modules.exercise.model.ExerciseModel;
			import modules.exercise.view.Exercises;
			import modules.IGroupInterface;
			import modules.exercise.view.VideoList;

			import mx.binding.utils.BindingUtils;
			import mx.binding.utils.ChangeWatcher;
			import mx.core.IVisualElement;
			import mx.core.IVisualElementContainer;
			import mx.utils.ObjectUtil;

			import spark.components.Group;

			import vo.ExerciseVO;

			public var modulename:String='exercises';

			[Bindable]
			public var urlmanager:BabeliaBrowserManager=BabeliaBrowserManager.getInstance();

			[Bindable]
			private var viewstackIndex:uint;

			public static const INDEX:uint=0;
			public static const VIEW:uint=1;

			private var changewatcher:ChangeWatcher;

			public function getModuleName():String
			{
				return modulename;
			}

			public function setDataBindings(data:*=null):void
			{
				changewatcher=BindingUtils.bindSetter(onURLChange, urlmanager, "actionFragment");
			}

			public function resetModule():void
			{
				changewatcher.unwatch();
				resetViews();
			}

			public function resetViews():void
			{
				if (exerciseViewstack)
				{
					var views:Array=exerciseViewstack.getChildren();
					for each (var nc:NavigatorContent in views)
					{
						if (nc.deferredContentCreated)
						{
							var v:*=nc.getElementAt(0) as IGroupInterface;
							if (v)
								v.resetGroup();
						}
					}
				}
			}

			private function actionView(fragment:String):void
			{
				var ex:ExerciseVO=new ExerciseVO();
				ex.exercisecode=fragment;
				viewstackIndex=VIEW;
				new ExerciseEvent(ExerciseEvent.EXERCISE_SELECTED, ex).dispatch();
			}

			private function actionIndex(fragment:String=null):void
			{
				viewstackIndex=INDEX;
				new ExerciseEvent(ExerciseEvent.GET_RECORDABLE_EXERCISES).dispatch();
			}

			public function onURLChange(value:Object):void
			{
				if (urlmanager.moduleName != modulename)
					return;

				resetViews();
				switch (value)
				{
					case 'view':
						if (urlmanager.targetFragment != '')
						{
							actionView(urlmanager.targetFragment);
						}
						else
						{
							urlmanager.updateURL('home');
							return;
						}
						break;
					default:
						actionIndex();
						break;
				}
			}
		]]>
	</fx:Script>

	<mx:ViewStack id="exerciseViewstack"
				  selectedIndex="{ viewstackIndex }"
				  resizeToContent="true"
				  width="100%"
				  height="100%">
		<s:NavigatorContent id="index">
			<view:VideoList id="exerciseIndex"/>
		</s:NavigatorContent>
		<s:NavigatorContent id="view">
			<view:Exercises id="exerciseView"/>
		</s:NavigatorContent>
	</mx:ViewStack>

</s:Module>
