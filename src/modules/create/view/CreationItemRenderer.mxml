<?xml version="1.0" encoding="utf-8"?>
<s:MXDataGridItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
						  xmlns:s="library://ns.adobe.com/flex/spark"
						  xmlns:mx="library://ns.adobe.com/flex/mx"
						  xmlns:hulstkamp="com.hulstkamp.*"
						  autoDrawBackground="true"
						  creationComplete="completeHandler()"
						  dataChange="dataChangeHandler()"
						  xmlns:skins="skins.*">

	<s:layout>
		<s:HorizontalLayout verticalAlign="top"
							paddingTop="16"
							paddingBottom="16"
							paddingLeft="8"
							paddingRight="8"/>
	</s:layout>

	<s:CheckBox id="itemSelected"
				change="itemSelected_changeHandler(event)"
				selected="{data.itemSelected}"/>

	<s:BitmapImage id="thumbnail"
				   source="{data.thumbnail}"
				   width="120"
				   height="90"/>


	<s:VGroup width="100%"
			  horizontalAlign="left"
			  gap="2">
		<s:Label id="title"
				 text="{data.title}"
				 styleName="boldLabel"/>
		<s:Line width="100%"
				alpha="0.5">
			<s:stroke>
				<mx:SolidColorStroke weight="2"
									 color="#aaaaaa"/>
			</s:stroke>
		</s:Line>
		<s:HGroup gap="20"
				  verticalAlign="middle">
			<s:HGroup gap="2"
					  verticalAlign="middle">
				<s:BitmapImage width="16"
						  height="16"
						  source="{ExerciseRenderUtils.getFlagSource(data)}"
						  id="exerciseLanguage"/>
				<s:Label text="{ExerciseRenderUtils.getLevelLabel(data.difficulty)}"
						 styleName="boldYellowLabel"/>
			</s:HGroup>
			<s:Label text="{ExerciseRenderUtils.formatDateTime(data.timecreated,DateTimeStyle.SHORT,DateTimeStyle.NONE)}"
					 styleName="boldYellowLabel"/>
		</s:HGroup>

		<s:HGroup width="850" paddingTop="4" paddingBottom="4" verticalAlign="middle">
			<s:Label text="{resourceManager.getString('myResources','VISIBILITY')+':'}"/>
			<s:Label text="{parseInt(data.visible) ? ResourceManager.getInstance().getString('myResources','PUBLIC') : ResourceManager.getInstance().getString('myResources','PRIVATE')}"/>
		</s:HGroup>
		<!--
		<s:HGroup verticalAlign="middle"
				  width="100%">
			<mx:Image id="license"
					  scaleContent="true"
					  source="{getLicenseSource(data as ExerciseVO)}"
					  autoLoad="true"
					  click="licenseClickHandler(event)"
					  toolTip="{_licenseData.tooltip}"
					  width="80"
					  height="15"
					  useHandCursor="true"
					  buttonMode="true"/>
			<skins:IconButton id="referenceUrl"
							  width="240"
							  label="{data.reference}"
							  click="referenceClickHandler(event)"
							  styleName="commonLinkButton"
							  enabled="{checkExternalUrl(data.reference)}"/>
		</s:HGroup>
		-->
		<s:HGroup width="100%"
				  verticalAlign="middle"
				  paddingBottom="16">
			<s:Label id="status"
					 text="{ResourceManager.getInstance().getString('myResources','STATUS')+':'}"/>
			<s:Label id="statusValue"
					 text="{parseInt(data.status) ? ResourceManager.getInstance().getString('myResources','READY') : ResourceManager.getInstance().getString('myResources','DRAFT')}"/>
		</s:HGroup>
		<skins:IconButton id="editVideoData"
				  label="{resourceManager.getString('myResources','EDIT')}"
				  click="editExercise(event)"
				  styleName="btn-default"/>

	</s:VGroup>

	<fx:Script>
		<![CDATA[
			import com.adobe.utils.StringUtil;
			
			import utils.ExerciseRenderUtils;
			
			import control.URLManager;
			
			import flash.globalization.DateTimeFormatter;
			import flash.globalization.DateTimeStyle;
			
			import model.DataModel;
			import model.LocalesAndFlags;
			
			import modules.exercise.event.ExerciseEvent;
			import modules.exercise.event.SearchEvent;
			import modules.subtitle.event.SubtitleEvent;
			
			import mx.controls.Text;
			import mx.formatters.NumberBaseRoundType;
			import mx.formatters.NumberFormatter;
			import mx.formatters.SwitchSymbolFormatter;
			import mx.resources.ResourceManager;
			
			import skins.IconButton;
			
			import utils.CollectionUtils;
			
			import view.common.LicenseResource;
			import view.common.TimeFormatter;
			
			import vo.ExerciseRoleVO;
			import vo.ExerciseVO;
			import vo.SubtitleAndSubtitleLinesVO;


			private var _data:Object;

			private var _creationComplete:Boolean=false;

			private var _model:DataModel=DataModel.getInstance();
			
			private var dateTimeFormatter:DateTimeFormatter;		
			
			public function completeHandler():void
			{
				_data=data;
				_creationComplete=true;

			}
			
			public function dataChangeHandler():void{
			}

			protected function editExercise(event:MouseEvent):void
			{
				//parentDocument.videoEditRequested(data);
				trace("Exercise renderer event dispatch data: "+data.exercisecode);
				URLManager.getInstance().redirect('/create/edit/'+data.exercisecode+'?s=1');
			}

			protected function itemSelected_changeHandler(event:Event):void
			{
				data.itemSelected=(event.currentTarget as CheckBox).selected;
			}
		]]>
	</fx:Script>

</s:MXDataGridItemRenderer>
