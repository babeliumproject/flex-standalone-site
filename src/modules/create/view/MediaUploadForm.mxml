<?xml version="1.0" encoding="utf-8"?>
<s:Form xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:common="view.common.*"
		xmlns:videoUpload="components.videoUpload.*"
		xmlns:view="modules.create.view.*">

	<fx:Script>
		<![CDATA[
			import events.UploadEvent;
			
			import model.DataModel;
			
			import mx.utils.StringUtil;

			private var filereference:FileReference;
			private var filename:String;
			private var filesize:uint;

			public function get mediaName():String
			{
				return filename;
			}

			public function resetComponent():void
			{
				filereference=null;
				filename=null;
				filesize=0;
				updateUploadProgress();
				licenseSelector.selectedIndex=0;
				referenceUrl.text='';
				uploadStatus.text='';
				uploadFilename.text='';
			}

			protected function changeUploadMethod(event:Event):void
			{
				//TODO
			}

			protected function uploadFile_clickHandler(event:MouseEvent):void
			{
				new UploadEvent(UploadEvent.UPLOAD_BROWSE).dispatch();
			}

			protected function recordFile_clickHandler(event:MouseEvent):void
			{
				methodSelection.visible=false;
				methodSelection.includeInLayout=false;
				recFromWebcamBox.visible=true;
				recFromWebcamBox.includeInLayout=true;
			}

			protected function cancelUpload_clickHandler(event:MouseEvent):void
			{
				updateUploadProgress();
				new UploadEvent(UploadEvent.UPLOAD_CANCEL).dispatch();
			}

			protected function updateUploadProgress(percentLoaded:Number=0):void
			{
				uploadProgressBar.setProgress(percentLoaded, 100);
				uploadProgressBar.validateNow();
			}

			protected function set uploadStart(start:Boolean):void
			{
				filereference=DataModel.getInstance().uploadFileReference;
				filename=filereference.name;
				filesize=filereference.size;
				uploadFilename.text=filename;
				updateUploadProgress();
				DataModel.getInstance().uploadFileSelected=false;
				chooseMediaTypeContainer.includeInLayout=false;
				chooseMediaTypeContainer.visible=false;
				uploadWidget.includeInLayout=true;
				uploadWidget.visible=true;
				new UploadEvent(UploadEvent.UPLOAD_START).dispatch();
			}

			protected function set uploadProgress(progress:Boolean):void
			{
				var bytesLoaded:int=DataModel.getInstance().uploadBytesLoaded;
				var bytesTotal:int=DataModel.getInstance().uploadBytesTotal;
				var percentLoaded:Number=Math.round((bytesLoaded / bytesTotal) * 100);
				updateUploadProgress(percentLoaded);
				DataModel.getInstance().uploadProgressUpdated=false;
			}

			protected function set uploadComplete(complete:Boolean):void
			{
				if (DataModel.getInstance().uploadFinishedData)
				{
					if (DataModel.getInstance().uploadErrors == '')
					{
						uploadStatus.text=resourceManager.getString('myResources', 'LABEL_UPLOADSTATUS_SUCCESSFULUPLOAD');
					}
					else
					{
						uploadStatus.text=DataModel.getInstance().uploadErrors;
					}
					DataModel.getInstance().uploadFinishedData=false;
					cancelUpload_clickHandler(null);
				}
			}
			
			protected function cancelCaptureClickHandler(event:Event):void{
				recFromWebcamBox.resetComponent();
				recFromWebcamBox.includeInLayout=false;
				recFromWebcamBox.visible=false;
				methodSelection.visible=true;
				methodSelection.includeInLayout=true;
			}
			
			protected function uploadCaptureClickHandler(event:Event):void{
				
			}
		]]>
	</fx:Script>

	<fx:Declarations>
		<s:RadioButtonGroup id="uploadOptionsGroup"
							itemClick="changeUploadMethod(event)"/>
	</fx:Declarations>

	<fx:Binding source="{DataModel.getInstance().uploadFileSelected}"
				destination="this.uploadStart"/>
	<fx:Binding source="{DataModel.getInstance().uploadProgressUpdated}"
				destination="this.uploadProgress"/>
	<fx:Binding source="{DataModel.getInstance().uploadFinishedData}"
				destination="this.uploadComplete"/>

	<s:FormHeading label="{resourceManager.getString('myResources','UPLOAD_MEDIA')}"
				   styleName="sectionTitleLabel"/>

	<s:BorderContainer id="chooseMediaTypeContainer"
					   backgroundAlpha="0"
					   width="640"
					   height="380">
		<s:layout>
			<s:VerticalLayout />
		</s:layout>

		<s:VGroup id="methodSelection"
				  includeInLayout="true"
				  visible="true"
				  width="100%"
				  height="100%"
				  horizontalAlign="center"
				  verticalAlign="middle">
			<s:Label id="chooseMethod"
					 text="{resourceManager.getString('myResources','CHOOSE_MEDIA_ORIGIN')+':'}"
					 fontSize="20"/>
			<s:HGroup visible="true"
					  includeInLayout="true"
					  paddingTop="80">
				<s:Button id="uploadFile"
						  styleName="bigBlueButton"
						  click="uploadFile_clickHandler(event)"
						  label="{resourceManager.getString('myResources','FILE')}"
						  buttonMode="true"/>
				<s:Button id="recordFile"
						  styleName="bigBlueButton"
						  click="recordFile_clickHandler(event)"
						  label="{resourceManager.getString('myResources','WEBCAM_CAPTURE')}"
						  buttonMode="true"/>
			</s:HGroup>
		</s:VGroup>

		<view:TempVideoRecording id="recFromWebcamBox"
								 streamsFolder="{DataModel.getInstance().exerciseStreamsFolder}"
								 filePrefix="upld"
								 includeInLayout="false"
								 visible="false"
								 width="100%"
								 height="100%"
								 cancelClickHandler="{cancelCaptureClickHandler}"
								 uploadClickHandler="{uploadCaptureClickHandler}"/>
	</s:BorderContainer>
	
	<s:BorderContainer id="uploadWidget"
					   backgroundAlpha="0"
					   visible="false"
					   includeInLayout="false" width="100%">
		<s:layout>
			<s:HorizontalLayout paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10"/>
		</s:layout>
		
		<s:Image source="resources/images/thumbs/nothumb.png"/>
		<s:VGroup>
			<s:HGroup verticalAlign="middle">
				<s:Label id="uploadFilename"/>
				<s:Button id="cancelUpload"
						  click="cancelUpload_clickHandler(event)"
						  label="{resourceManager.getString('myResources','CANCEL')}"
						  cornerRadius="1"
						  height="30"/>
			</s:HGroup>
			<mx:ProgressBar id="uploadProgressBar"
							mode="manual"
							labelPlacement="center"
							label=""
							height="30"
							width="100%"/>
			<s:Label id="uploadStatus"/>
			<s:FormItem label="{resourceManager.getString('myResources','LABEL_SPECIFY_LICENSE')}"
						styleName="boldLabel"
						required="true">
				<common:LicenseComboBox id="licenseSelector"/>
			</s:FormItem>
			<s:FormItem label="{resourceManager.getString('myResources','LABEL_VIDEO_OWNER_AUTHOR')}"
						styleName="boldLabel"
						toolTip="{resourceManager.getString('myResources','TOOLTIP_VIDEO_OWNER_AUTHOR')}"
						width="100%">
				<s:TextInput width="100%"
							 id="referenceUrl"/>
			</s:FormItem>
		</s:VGroup>
		
	</s:BorderContainer>

	<!--
	<s:HGroup width="100%">
		<s:Image id="warningIcon"
				  source="resources/images/about_section_title_icon.png"/>
		<s:VGroup width="100%">
			<mx:Text htmlText="{ StringUtil.substitute(resourceManager.getString('myResources', 'UPLOAD_LIMITS_INFO'), DataModel.getInstance().maxFileSize/1048576, DataModel.getInstance().minExerciseDuration, DataModel.getInstance().maxExerciseDuration) }"
					 fontSize="14"
					 width="100%"/>
			<mx:Text htmlText="{ StringUtil.substitute(resourceManager.getString('myResources', 'UPLOAD_LIMITS_REASONING'), DataModel.getInstance().maxExerciseDuration) }"
					 width="100%"/>
		</s:VGroup>
	</s:HGroup>
	-->
</s:Form>
