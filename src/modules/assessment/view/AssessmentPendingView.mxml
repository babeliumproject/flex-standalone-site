<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:view="modules.assessment.view.*"
		  paddingTop="16"
		  paddingBottom="16"
		  paddingLeft="16"
		  paddingRight="16"
		  implements="modules.IGroupInterface">


	<fx:Script>
		<![CDATA[
			import control.URLManager;

			import model.DataModel;

			import mx.collections.ArrayCollection;
			import mx.controls.DataGrid;
			import mx.resources.ResourceManager;

			import vo.EvaluationVO;


			[Bindable]
			private var dataModel:DataModel=DataModel.getInstance();

			[Bindable]
			private var waitingForAssessmentList:ArrayCollection;

			public function resetGroup():void
			{
				waitingForAssessmentList=null;
			}

			private function set waitingAssessmentRetrievedHandler(value:Boolean):void
			{
				waitingForAssessmentList=dataModel.waitingForAssessmentData;
				var length:int = waitingForAssessmentList ? waitingForAssessmentList.length : 0;
				if(!waitingForAssessmentList){
					noresultNotice.includeInLayout=true;
					noresultNotice.visible=true;
					waitingAssessmentListAndPagination.visible=false;
					waitingAssessmentListAndPagination.includeInLayout=false;
				} else {
					noresultNotice.includeInLayout=false;
					noresultNotice.visible=false;
					waitingAssessmentListAndPagination.visible=true;
					waitingAssessmentListAndPagination.includeInLayout=true;
				}
				waitingAssessmentListAndPagination.dataProvider=waitingForAssessmentList;
			}

			private function waitingAssessmentChangeHandler(event:Event):void
			{
				var selectedItem:EvaluationVO=(DataGrid(event.target).selectedItem) as EvaluationVO;
				assessSubmission(selectedItem.responseId);
			}

			private function assessSubmission(responseid:int):void
			{
				URLManager.getInstance().redirect('/assessments/add/' + responseid);
			}
		]]>
	</fx:Script>

	<fx:Binding source="{dataModel.waitingForAssessmentDataRetrieved}"
				destination="waitingAssessmentRetrievedHandler"/>


	<s:Label id="assessmentPendingListTitleLabel"
			 styleName="h2"
			 text="{ResourceManager.getInstance().getString('myResources', 'ASSESSMENT_PENDING_RESPONSES_LIST')}"/>

	<s:BorderContainer id="noresultNotice"
					   width="100%"
					   styleName="lightBorderContainer"
					   includeInLayout="false" 
					   visible="false">
	<s:Label id="noresultLbl" 
			 paddingLeft="8"
			 paddingTop="32"
			 paddingBottom="32"
			 paddingRight="8"
			 text="{ResourceManager.getInstance().getString('myResources','THERE_ARE_NO_RESPONSES_FOR_YOU_TO_ASSESS')+'.'}"/>
	</s:BorderContainer>
	
	<view:CustomItemRendererPaginatedTable id="waitingAssessmentListAndPagination"
										   itemRenderer="{ListItemWaitingForAssessment}"
										   width="100%"
										   changeListener="{waitingAssessmentChangeHandler}"/>

</s:VGroup>
