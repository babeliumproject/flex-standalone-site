<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx">

	<fx:Script>
		<![CDATA[
			import components.main.VideoPaginator;
			
			import spark.events.IndexChangeEvent;
			
			import model.DataModel;
			
			import mx.collections.ArrayCollection;
			import mx.events.ListEvent;
			
			import spark.components.Button;

			private var _currentPage:int=1;
			private var _dataProvider:ArrayCollection;

			public function set currentPaginationPage(value:uint):void
			{
				_currentPage=value;
				createPagination();
			}

			public function set dataProvider(data:ArrayCollection):void
			{
				_dataProvider=data;
				if (_dataProvider && _dataProvider.length > 0)
				{
					table.includeInLayout=true;
					table.visible=true;
					createPagination();
				}
				else
				{
					table.includeInLayout=false;
					table.visible=false;
				}
			}

			public function set itemRenderer(value:IFactory):void
			{
				table.itemRenderer=value;
			}

			public function set changeListener(changeFunction:Function):void
			{
				table.addEventListener(IndexChangeEvent.CHANGING, changeFunction, false, 0, true);
			}

			public function createPagination():void
			{
				VideoPaginator.createPaginationMenu(_dataProvider.length, DataModel.getInstance().pageSize, _currentPage, DataModel.getInstance().numberOfPagesNav, paginationBox, navigateToPage);
				refreshDataProvider();
			}

			private function navigateToPage(event:MouseEvent):void
			{
				//Go to the page
				_currentPage=int((event.target as Button).id);
				//Refresh the pagination controls
				createPagination();
			}

			public function refreshDataProvider():void
			{
				var current:int=_currentPage - 1;
				var pageSize:int=DataModel.getInstance().pageSize;
				var dataTemp:ArrayCollection=new ArrayCollection(_dataProvider.source.slice((current * pageSize), (current * pageSize) + pageSize));
				table.dataProvider=dataTemp;
				
				//Workaround for a bug that makes the container to measure incorrectly when the initial daparovider=empty
				var vlayout:VerticalLayout=new VerticalLayout();
				vlayout.requestedMinRowCount=1;
				vlayout.gap=0;
				table.layout=vlayout;
				table.percentWidth=100;
			}
		]]>
	</fx:Script>


	<s:List id="table"
			width="100%"
			horizontalScrollPolicy="off"
			verticalScrollPolicy="off"
			borderColor="0xE0E0E0"
			contentBackgroundAlpha="0.0"
			alternatingItemColors="[0xffffff,0xf9f9f9]">
		<s:layout>
			<s:VerticalLayout requestedMinRowCount="1" gap="0"/>
		</s:layout>
	</s:List>

	<s:HGroup id="paginationBox"
			  width="100%"
			  horizontalAlign="center"
			  gap="2"/>

</s:VGroup>
