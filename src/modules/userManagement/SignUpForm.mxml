<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns:main="modules.main.*"
		 xmlns:userManagement="modules.userManagement.*"
		 fontFamily="Arial"
		 fontSize="12"
		 creationComplete="onCreationComplete()">
	<mx:Script>
		<![CDATA[
			import com.adobe.crypto.SHA1;
			
			import events.RegisterUserEvent;
			import events.ViewChangeEvent;
			
			import model.DataModel;
			
			import modules.main.LanguageComboBox;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.ToolTip;
			import mx.events.ListEvent;
			import mx.managers.ToolTipManager;
			
			import vo.NewUserVO;
			import vo.UserLanguageVO;

			public static const AVAILABLE_LANGUAGES:int=4;

			//These variables are used to store the several combobox's info the user might add
			private var motherLanguagesArray:ArrayCollection = new ArrayCollection();
			private var knownLanguagesArray:ArrayCollection=new ArrayCollection();
			private var interestLanguagesArray:ArrayCollection=new ArrayCollection();
			
			private var motherTongue:LanguageComboBox;
			private var knownLanguage:LanguageKnowledgeBox;
			private var interestLanguage:LanguageKnowledgeBox;
			

			private var selectedLanguages:ArrayCollection=new ArrayCollection();
			
			private var mailPattern:RegExp=/^[a-zA-Z]\w+([.]\w+)*[@]\w+([.]\w+)*[.][a-zA-Z]{2,4}$/;
			private var fieldPattern:RegExp=/^[a-zA-Z_]\w*$/;
			private var anyPattern:RegExp=/.*/s;

			[Bindable] private var errorMessageToolTips:Array=new Array;

			public function onCreationComplete():void
			{
				addInitialComboboxes();
			}
			
			public function addInitialComboboxes():void{
				motherTongue = new LanguageComboBox();
				motherLanguagesBox.addChild(motherTongue);
				motherLanguagesArray.addItem(motherTongue);
				
				knownLanguage = new LanguageKnowledgeBox();
				knownLanguagesBox.addChild(knownLanguage);
				knownLanguagesArray.addItem(knownLanguage);
				
				interestLanguage = new LanguageKnowledgeBox();
				interestLanguagesBox.addChild(interestLanguage);
				interestLanguagesArray.addItem(interestLanguage);
			}

			public function motherTongueComboBox_changeHandler(event:ListEvent):void
			{
				//Pop the selected language from the rest of language comboboxes
			}

			public function firstKnownLang_changeHandler(event:ListEvent):void
			{
				//Pop the selected language from the rest of language comboboxes
			}

			private function validateTextInput(target:TextInput, fieldName:String, 
											   matchPattern:RegExp, checkEmpty:Boolean = true, 
											   checkLength:Boolean = true, checkPattern:Boolean = true, 
											   checkString:Boolean = false, minLength:int = 1, 
											   maxLength:int = 200, matchString:String=''):Boolean
			{
				// Has the error message ToolTip already been created?
				// (A reference to created ToolTip instances is saved in a hash called errorMessageToolTips.)
				var toolTipExists:Boolean=errorMessageToolTips.hasOwnProperty(target.name);
				var errorMessage:String='';

				if (toolTipExists)
				{
					trace("error corrected removing tooltip");
					ToolTipManager.destroyToolTip(errorMessageToolTips[target.name] as ToolTip);
					delete errorMessageToolTips[target.name];
				}

				if (checkEmpty && target.text == "")
				{
					errorMessage=resourceManager.getString("myResources", "EMPTY_"+fieldName.toUpperCase());
				}
				else if (checkLength && (target.text.length < minLength))
				{
					errorMessage=resourceManager.getString("myResources", "SHORT_"+fieldName.toUpperCase());
				}
				else if (checkLength && (target.text.length > maxLength))
				{
					errorMessage=resourceManager.getString("myResources", "LONG_"+fieldName.toUpperCase());
				}
				else if (checkPattern && (!matchPattern.test(target.text)))
				{
					errorMessage=resourceManager.getString("myResources", "INVALID_"+fieldName.toUpperCase());
				}
				else if (checkString && (target.text != matchString)){
					errorMessage=resourceManager.getString("myResources", "INVALID_"+fieldName.toUpperCase());
				}
				
				if (errorMessage != '')
				{
					// Create the ToolTip instance.
					var pt:Point=new Point(target.x, target.y);
					pt=target.contentToGlobal(pt);
					var errorTip:ToolTip=ToolTipManager.createToolTip(errorMessage, pt.x + target.width + 5, pt.y) as ToolTip;
					errorTip.setStyle("styleName", "errorTip");

					// Save a reference to the error message ToolTip in a hash for later use.
					errorMessageToolTips[target.name]=errorTip;
					(errorMessageToolTips[target.name] as ToolTip).visible=true;
					
					return false; //The filed has errors, so we return false
				} 
				else 
				{
					return true; //The field has valid input, so we return true
				}
			}


			private function processNewUser():void
			{

				var languagesCollection:ArrayCollection = new ArrayCollection();
				
				for each (var mLang:LanguageComboBox in motherLanguagesArray){
					languagesCollection.addItem(new UserLanguageVO(0,0,mLang.languageComboBox.selectedItem.code,7,0));	
				}
				for each (var kLang:LanguageKnowledgeBox in knownLanguagesArray){
					languagesCollection.addItem(new UserLanguageVO(0,0,kLang.languageCombo.languageComboBox.selectedItem.code,kLang.levelCombo.dificultyLevelComboBox.selectedIndex +1,0));	
				}
				for each (var iLang:LanguageKnowledgeBox in interestLanguagesArray){
					languagesCollection.addItem(new UserLanguageVO(0,0,iLang.languageCombo.languageComboBox.selectedItem.code,kLang.levelCombo.dificultyLevelComboBox.selectedIndex +1,0));	
				}
				
				var languages:Array = languagesCollection.toArray();
				

				if(validateTextInput(username,'USERNAME',fieldPattern,true,true,true,false,4,20) &&
				   validateTextInput(email,'EMAIL',mailPattern,false,false) &&
				   validateTextInput(password, 'PASSWORD', anyPattern, true, true, false, false, 6, 40) &&
				   validateTextInput(repassword, 'REPASSWORD', anyPattern, false, false, false, true, 1, 200, password.text))
				{
					var user:NewUserVO=new NewUserVO(username.text, SHA1.hash(password.text), realName.text, surname.text, email.text, languages);
					new RegisterUserEvent(RegisterUserEvent.REGISTER_USER, user).dispatch();
				} else {
					Alert.show("You have errors in your form");
				}
			}

			protected function addAnotherKnownLang_clickHandler(event:MouseEvent):void
			{
				if(knownLanguagesArray.length < SignUpForm.AVAILABLE_LANGUAGES -1){
					var otherKnownLanguage:LanguageKnowledgeBox=new LanguageKnowledgeBox();
					knownLanguagesBox.addChild(otherKnownLanguage);
					knownLanguagesArray.addItem(otherKnownLanguage);
				}
			}

			protected function addAnotherInterestLang_clickHandler(event:MouseEvent):void
			{
				if(interestLanguagesArray.length < SignUpForm.AVAILABLE_LANGUAGES -1){
					var otherInterestLanguage:LanguageKnowledgeBox=new LanguageKnowledgeBox();
					interestLanguagesBox.addChild(otherInterestLanguage);
					interestLanguagesArray.addItem(otherInterestLanguage);
				}
			}
			
			protected function addAnotherMotherLang_clickHandler(event:MouseEvent):void
			{
				if(motherLanguagesArray.length < SignUpForm.AVAILABLE_LANGUAGES -1){
					var otherMotherLanguage:LanguageComboBox=new LanguageComboBox();
					motherLanguagesBox.addChild(otherMotherLanguage);
					motherLanguagesArray.addItem(otherMotherLanguage);
				}
			}

			protected function resetToInitialStatus():void
			{
				username.text = '';
				email.text = '';
				password.text = '';
				repassword.text = '';
				realName.text = '';
				surname.text = '';
				
				if(errorMessageToolTips.hasOwnProperty(username.name))
					ToolTipManager.destroyToolTip(errorMessageToolTips[username.name] as ToolTip);
				if(errorMessageToolTips.hasOwnProperty(email.name))
					ToolTipManager.destroyToolTip(errorMessageToolTips[email.name] as ToolTip);
				if(errorMessageToolTips.hasOwnProperty(password.name))
					ToolTipManager.destroyToolTip(errorMessageToolTips[password.name] as ToolTip);
				if(errorMessageToolTips.hasOwnProperty(repassword.name))
					ToolTipManager.destroyToolTip(errorMessageToolTips[repassword.name] as ToolTip);
				errorMessageToolTips = null;
				errorMessageToolTips = new Array();
				
				
				motherLanguagesBox.removeAllChildren();
				knownLanguagesBox.removeAllChildren();
				interestLanguagesBox.removeAllChildren();
				motherLanguagesArray.removeAll();
				knownLanguagesArray.removeAll();
				interestLanguagesArray.removeAll();
				
				addInitialComboboxes();
			}
			
			protected function set onTabChange(value:Boolean):void{
				resetToInitialStatus();	
			}


			protected function cancelButton_clickHandler(event:MouseEvent):void
			{
				resetToInitialStatus();
				new ViewChangeEvent(ViewChangeEvent.VIEW_HOME_MODULE).dispatch();
			}

		]]>
	</mx:Script>
	
	<mx:Binding source="{DataModel.getInstance().stopVideoFlag}"
				destination="onTabChange"/>

	<mx:Label text="Sign up on Babelium Project"
			  fontSize="18"
			  fontWeight="bold"/>
	<mx:Label id="errorInfo"
			  fontSize="12"
			  color="#FF0000"
			  fontWeight="bold"
			  textAlign="center"
			  width="100%"
			  text="{DataModel.getInstance().registrationErrorMessage}"/>
	<mx:VBox width="100%"
			 horizontalAlign="center"
			 paddingLeft="10"
			 paddingRight="10">

		<mx:Form borderStyle="solid"
				 width="100%"
				 borderThickness="2"
				 labelWidth="200">
			<mx:FormItem label="User Name:"
						 fontWeight="bold"
						 required="true">
				<mx:HBox>
					<mx:TextInput id="username"
								  maxChars="20"
								  fontWeight="normal"
								  change="validateTextInput(username, 'USERNAME', fieldPattern, true, true, true, false, 4, 20)"
								  focusOut="validateTextInput(username, 'USERNAME', fieldPattern, true, true, true, false, 4, 20)"/>
				</mx:HBox>

			</mx:FormItem>
			<mx:FormItem label="eMail:"
						 fontWeight="bold"
						 required="true">
				<mx:HBox>
					<mx:TextInput id="email"
								  maxChars="80"
								  fontWeight="normal"
								  change="validateTextInput(email, 'EMAIL',mailPattern, false, false)"
								  focusOut="validateTextInput(email,'EMAIL',mailPattern, false, false)"/>
				</mx:HBox>
			</mx:FormItem>
			<mx:FormItem label="Password:"
						 fontWeight="bold"
						 required="true">
				<mx:HBox>
					<mx:TextInput id="password"
								  displayAsPassword="true"
								  maxChars="40"
								  fontWeight="normal"
								  change="validateTextInput(password, 'PASSWORD', anyPattern, true, true, false, false, 6, 40)"
								  focusOut="validateTextInput(password, 'PASSWORD', anyPattern, true, true, false, false, 6, 40)"/>
				</mx:HBox>

			</mx:FormItem>
			<mx:FormItem label="Re-enter password:"
						 fontWeight="bold"
						 required="true"
						 borderStyle="none">
				<mx:HBox>
					<mx:TextInput id="repassword"
								  displayAsPassword="true"
								  maxChars="40"
								  fontWeight="normal"
								  change="validateTextInput(repassword, 'REPASSWORD', anyPattern, false, false, false, true, 1, 200, password.text)"
								  focusOut="validateTextInput(repassword, 'REPASSWORD', anyPattern, false, false, false, true, 1, 200, password.text)"/>
				</mx:HBox>

			</mx:FormItem>
			<mx:Spacer/>
			<mx:FormItem label="Real Name:"
						 fontWeight="bold">
				<mx:TextInput id="realName"
							  width="100%"/>
			</mx:FormItem>
			<mx:FormItem label="Real Surname:"
						 fontWeight="bold">
				<mx:TextInput id="surname"
							  width="100%"/>
			</mx:FormItem>
		</mx:Form>
		<mx:Form borderStyle="solid"
				 width="100%"
				 borderThickness="2">
			<mx:Label text="Tell us which is your main language or mother tongue"/>
			<mx:Spacer/>
			<mx:FormItem label="First Language (Mother Tongue):"
						 fontWeight="bold"
						 required="true">
				<mx:HBox>
					<mx:VBox id="motherLanguagesBox">
					</mx:VBox>
					<mx:LinkButton id="addAnotherMotherLang"
								   click="addAnotherMotherLang_clickHandler(event)"
								   label="Add another"
								   textDecoration="underline"
								   paddingLeft="6"
								   paddingRight="6"
								   icon="@Embed(source='../../resources/images/add.png')"/>
				</mx:HBox>
			</mx:FormItem>
			<mx:Spacer/>
			<mx:Label text="Do you know any other language with enough level to assess other peoples' pronouncing etc.?"/>
			<mx:Spacer/>
			<mx:FormItem label="Other Languages:"
						 fontWeight="bold">
				<mx:HBox>
					<mx:VBox id="knownLanguagesBox">
					</mx:VBox>
					<mx:LinkButton id="addAnotherKnownLang"
								   click="addAnotherKnownLang_clickHandler(event)"
								   label="Add another"
								   textDecoration="underline"
								   paddingLeft="6"
								   paddingRight="6"
								   icon="@Embed(source='../../resources/images/add.png')"/>
				</mx:HBox>
			</mx:FormItem>
			<mx:Spacer/>
			<mx:Label text="Which languages would you like to practise?"/>
			<mx:Spacer/>
			<mx:FormItem label="Languages you're interested in:"
						 fontWeight="bold">
				<mx:HBox>
					<mx:VBox id="interestLanguagesBox">
					</mx:VBox>
					<mx:LinkButton id="addAnotherInterestLang"
								   click="addAnotherInterestLang_clickHandler(event)"
								   label="Add another"
								   textDecoration="underline"
								   paddingLeft="6"
								   paddingRight="6"
								   icon="@Embed(source='../../resources/images/add.png')"/>
				</mx:HBox>
			</mx:FormItem>
		</mx:Form>
		<mx:Spacer/>
	</mx:VBox>
	<mx:HBox width="100%"
			 horizontalAlign="center"
			 verticalAlign="middle">
		<mx:Button id="saveButton"
				   label="Register"
				   click="processNewUser()"
				   icon="@Embed(source='../../resources/images/save.png')"/>
		<mx:Button id="cancelButton"
				   label="Cancel"
				   click="cancelButton_clickHandler(event)"
				   icon="@Embed(source='../../resources/images/cancel.png')"/>
	</mx:HBox>

</mx:VBox>
