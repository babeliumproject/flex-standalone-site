<?xml version="1.0" encoding="utf-8"?>

<!--
Babelium Project open source collaborative second language oral practice - http://www.babeliumproject.com

Copyright (c) 2011 GHyM and by respective authors (see below).

This file is part of Babelium Project.

Babelium Project is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Babelium Project is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:control="control.*"
			   xmlns:business="business.*"
			   xmlns:main="components.main.*"
			   preinitialize="init()"
			   height="100%"
			   width="100%"
			   pageTitle="Babelium Project"
			   creationComplete="onComplete()">

	<fx:Style source="Main.css"/>
	
	<fx:Metadata>
		[ResourceBundle("myResources")]
	</fx:Metadata>

	<s:layout>
		<s:VerticalLayout/>
	</s:layout>

	<fx:Script>
		<![CDATA[
			import control.*;
			
			import org.as3commons.logging.api.LOGGER_FACTORY;
			import org.as3commons.logging.setup.HierarchicalSetup;
			import org.as3commons.logging.setup.LevelTargetSetup;
			import org.as3commons.logging.setup.LogSetupLevel;
			import org.as3commons.logging.setup.log4j.Log4JStyleSetup;
			import org.as3commons.logging.setup.log4j.log4jPropertiesToSetup;
			
			import events.LoginEvent;
			import events.PreferenceEvent;
			
			import model.DataModel;
			
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.utils.ObjectUtil;
			
			import skins.ApplicationCustomSkin;

			private var mainSO:SharedObject;

			[Bindable]
			public var appModelLocator:DataModel;
			

			//Initialization method
			private function init():void
			{
				appModelLocator=DataModel.getInstance();
				
				new PreferenceEvent(PreferenceEvent.GET_APP_PREFERENCES).dispatch();
				new LoginEvent(LoginEvent.PROCESS_LOGIN, null).dispatch();
				//new SetupConnectionEvent().dispatch();

				//Security.allowDomain(appModelLocator.uploadDomain);

			}

			private function onComplete():void
			{
				appModelLocator.appBody=content;
				loadLoggingConfig('logging.properties');
			}
			
			private function loadLoggingConfig(url:String):void{
				var loader:URLLoader = new URLLoader();
				loader.addEventListener(Event.COMPLETE, parseLoggingConfig);
				loader.addEventListener(IOErrorEvent.IO_ERROR, urlNotAvailable);
				loader.load(new URLRequest(url));
			}
			
			private function parseLoggingConfig(event:Event):void{
				LOGGER_FACTORY.setup = log4jPropertiesToSetup(event.target.data);
			}
			
			private function urlNotAvailable(e:IOErrorEvent):void{
				trace("Couldn't load the specified resource from the url. "+e.text);
			}
			
		]]>
	</fx:Script>

	<fx:Declarations>
		<!--This defines the reachable remote services -->
		<business:Services id="appServiceLocator"/>

		<!--This defines all the actions available -->
		<control:Controller id="appController"/>
	</fx:Declarations>

	<s:Scroller id="appScroller"
				width="100%"
				height="100%" >
		<s:VGroup id="appContainer"
				  width="100%"
				  height="100%"
				  clipAndEnableScrolling="true"
				  gap="0">
			<main:Header id="header"/>
			<main:Navigation id="navigation"/>
			<main:Body id="content"/>
			<main:Footer id="footer"/>
		</s:VGroup>
	</s:Scroller>


</s:Application>
