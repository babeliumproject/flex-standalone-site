<?xml version="1.0" encoding="utf-8"?>

<!--

	ADOBE SYSTEMS INCORPORATED
	Copyright 2010 Adobe Systems Incorporated
	All Rights Reserved.

	NOTICE: Adobe permits you to use, modify, and distribute this file
	in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the anchor button on a Spark DropDownList component.

	  @see spark.components.DropDownList
	  @see spark.skins.spark.DropDownListSkin

	  @langversion 3.0
	  @playerversion Flash 10
	  @playerversion AIR 1.5
	  @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
			 minWidth="21"
			 minHeight="32">

	<fx:Metadata>
		<![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.Button")]
    	]]>
	</fx:Metadata>

	<fx:Script fb:purpose="styling">
		<![CDATA[
			/**
			 * @private
			 */
			override protected function initializationComplete():void
			{
				useChromeColor=true;
				super.initializationComplete();
			}

			/**
			 *  @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				var cr:Number=getStyle("cornerRadius");

				if (cornerRadius != cr)
				{
					cornerRadius=cr;
					fill.radiusX=cornerRadius;
					fill.radiusY=cornerRadius;
					border.radiusX=cornerRadius;
					border.radiusY=cornerRadius;
				}

				if (hldownstroke)
				{
					hldownstroke.tlRadius=cornerRadius;
					hldownstroke.trRadius=cornerRadius;
				}

				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}

			[Bindable]
			private var backgroundColor:uint=0xffffff;
			[Bindable]
			private var backgroundColor_hover:uint=0xe6e6e6;
			[Bindable]
			private var backgroundColor_active:uint=borderColor_hover;

			[Bindable]
			private var borderColor:uint=0xcccccc;
			[Bindable]
			private var borderColor_hover:uint=0xadadad;
			[Bindable]
			private var borderColor_active:uint=borderColor_hover;


			private var cornerRadius:Number=3;
		]]>
	</fx:Script>

	<!-- states -->
	<s:states>
		<s:State name="up"/>
		<s:State name="over"/>
		<s:State name="down"/>
		<s:State name="disabled"/>
	</s:states>

	<!-- layer 2: fill -->
	<!--- @private -->
	<s:Rect id="fill"
			left="1"
			right="1"
			top="1"
			bottom="1"
			radiusX="3">
		<s:fill>
			<s:SolidColor color="{backgroundColor}"
						  color.over="{backgroundColor_hover}"
						  color.down="{backgroundColor_active}"/>
		</s:fill>
	</s:Rect>

	<!-- layer 7: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
	<!--- @private -->
	<s:Rect id="border"
			left="0"
			right="0"
			top="0"
			bottom="0"
			radiusX="3">
		<s:stroke>
			<s:SolidColorStroke weight="1"
								color="{borderColor}"
								color.over="{borderColor_hover}"
								color.down="{borderColor_active}"
								alpha="1"/>
		</s:stroke>
	</s:Rect>

	<s:RectangularDropShadow id="hldownstroke"
							 left="0"
							 right="0"
							 top="0"
							 includeIn="down"
							 blurX="5"
							 blurY="5"
							 alpha="0.125"
							 distance="4"
							 angle="90"
							 color="0x000000"
							 tlRadius="3"
							 trRadius="3"/>
	<!--
	<s:Rect id="vseparator"
			right="18"
			top="1"
			bottom="1"
			width="1">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0x000000"
								 alpha="0.5625"
								 alpha.down="0.6375"/>
				<s:GradientEntry color="0x000000"
								 alpha="0.75"
								 alpha.down="0.85"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	-->

	<!-- layer 8: arrow -->
	<!--- The arrow graphic displayed in the anchor button. -->
	<s:Path right="12"
			verticalCenter="0"
			id="arrow"
			data="M 4.0 4.0 L 4.0 3.0 L 5.0 3.0 L 5.0 2.0 L 6.0 2.0 L 6.0 1.0 L 7.0 1.0 L 7.0 0.0 L 0.0 0.0 L 0.0 1.0 L 1.0 1.0 L 1.0 2.0 L 2.0 2.0 L 2.0 3.0 L 3.0 3.0 L 3.0 4.0 L 4.0 4.0">
		<s:fill>
			<!--
			<s:RadialGradient rotation="90"
							  focalPointRatio="1">

				<s:GradientEntry id="arrowFill1"
								 color="0"
								 alpha="0.6"/>
				<s:GradientEntry id="arrowFill2"
								 color="0"
								 alpha="0.8"/>
			</s:RadialGradient>
			-->
			<s:SolidColor color="0x333333"/>
		</s:fill>
	</s:Path>
</s:SparkSkin>
