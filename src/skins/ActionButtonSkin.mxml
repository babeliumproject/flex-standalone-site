<?xml version="1.0" encoding="utf-8"?>

<!--

	 ADOBE SYSTEMS INCORPORATED
	 Copyright 2008 Adobe Systems Incorporated
	 All Rights Reserved.

	 NOTICE: Adobe permits you to use, modify, and distribute this file
	 in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark Button component.

	 @see spark.components.Button

	 @langversion 3.0
	 @playerversion Flash 10
	 @playerversion AIR 1.5
	 @productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
			 xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
			 minWidth="21"
			 minHeight="21"
			 alpha.disabled="0.5">

	<!-- host component -->
	<fx:Metadata>
		<![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.Button")]
        ]]>
	</fx:Metadata>

	<fx:Script fb:purpose="styling">
		<![CDATA[
			/* Define the skin elements that should not be colorized.
			 For button, the graphics are colorized but the label is not. */
			static private const exclusions:Array=["labelDisplay"];

			/**
			 * @private
			 */
			override public function get colorizeExclusions():Array
			{
				return exclusions;
			}

			/**
			 * @private
			 */
			override protected function initializationComplete():void
			{
				useChromeColor=true;
				super.initializationComplete();
			}

			/**
			 *  @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				var cr:Number=getStyle("cornerRadius");

				if (cornerRadius != cr)
				{
					cornerRadius=cr;

					dropShadow.tlRadius=cornerRadius;
					dropShadow.trRadius=cornerRadius;
					dropShadow.blRadius=cornerRadius;
					dropShadow.brRadius=cornerRadius;

//					shadow.radiusX=cornerRadius;
					fill.radiusX=cornerRadius;

					border.radiusX=cornerRadius;
				}



				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}

			private var cornerRadius:Number=2;
		]]>
	</fx:Script>

	<!-- states -->
	<s:states>
		<s:State name="up"/>
		<s:State name="over"/>
		<s:State name="down"/>
		<s:State name="disabled"/>
	</s:states>

	<!--
		 paddingLeft: 10;
		 paddingRight: 10;
		 paddingTop: 4;
		 paddingBottom: 4;

		 highlightAlphas: 0, 0;
		 fillAlphas: 1, 1, 1, 1;
		 fillColors: #31b5de, #207791, #ffffff, #f9f9f9;

		 textRollOverColor: #31b5de;
		 textSelectedColor: #207791;
		 borderColor: #31b5de;
		 themeColor: #f9f9f9;
	-->

	<!-- layer 1: shadow -->
	<!--- @private -->
	<s:RectangularDropShadow id="dropShadow"
							 blurX="8"
							 blurY="8"
							 alpha="0.32"
							 distance="0"
							 angle="90"
							 color="0x000000"
							 left="0"
							 top="0"
							 right="0"
							 bottom="0"/>
	<s:Group left="0"
			 top="0"
			 right="0"
			 bottom="0">

		<!-- layer 2: fill -->
		<!--- @private -->
		<s:Rect id="fill"
				left="1"
				right="1"
				top="1"
				bottom="1"
				radiusX="2">
			<s:fill>
				<s:LinearGradient rotation="90">
					<s:GradientEntry color="0x31b5de"
									 color.over="0xF9F9F9"
									 color.down="0xF0F0F0"
									 ratio="0.5"/>
					<s:GradientEntry color="0x207791"
									 color.over="0xF0F0F0"
									 color.down="0xE3DEDF"
									 ratio="1.0"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>

		<!-- layer 7: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
		<!--- @private -->
		<s:Rect id="border"
				left="0"
				right="0"
				top="0"
				bottom="0"
				width="69"
				height="20"
				radiusX="2">
			<s:stroke>
				<s:LinearGradientStroke rotation="90"
										weight="2">
					<s:GradientEntry color="0x31b5de"
									 alpha="0.5625"
									 alpha.down="0.6375"/>
					<s:GradientEntry color="0x207791"
									 alpha="0.75"
									 alpha.down="0.85"/>
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Rect>


		<!-- layer 8: text -->
		<!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
		<s:Label id="labelDisplay"
				 textAlign="center"
				 verticalAlign="middle"
				 fontWeight="{hostComponent.getStyle('fontWeight')}"
				 maxDisplayedLines="1"
				 color.over="#31b5de"
				 color.down="#207791"
				 horizontalCenter="0"
				 verticalCenter="1"
				 left="10"
				 right="10"
				 top="2"
				 bottom="2"
				 paddingLeft="10"
				 paddingRight="10"
				 paddingTop="8"
				 paddingBottom="8">
		</s:Label>
	</s:Group>

</s:SparkSkin>
